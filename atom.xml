<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hui&#39;s Blog</title>
  
  
  <link href="https://ey404.github.io/atom.xml" rel="self"/>
  
  <link href="https://ey404.github.io/"/>
  <updated>2020-10-28T06:17:57.140Z</updated>
  <id>https://ey404.github.io/</id>
  
  <author>
    <name>Hui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安全杂项Misc笔记</title>
    <link href="https://ey404.github.io/2020/10/27/%E5%AE%89%E5%85%A8%E6%9D%82%E9%A1%B9Misc%E7%AC%94%E8%AE%B0/"/>
    <id>https://ey404.github.io/2020/10/27/%E5%AE%89%E5%85%A8%E6%9D%82%E9%A1%B9Misc%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-27T02:41:33.000Z</published>
    <updated>2020-10-28T06:17:57.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://oj.x10sec.org/">项目地址</a></p></blockquote><h2 id="格式不正确"><a href="#格式不正确" class="headerlink" title="格式不正确"></a>格式不正确</h2><ul><li>题目：</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023084317566.png" alt="image-20201023084317566"></p><ul><li>分析</li></ul><blockquote><p>下载了个zip压缩出来还有一个zip</p></blockquote><blockquote><p>提示格式有问题尝试从修改格式入手</p></blockquote><ul><li>解题</li></ul><blockquote><ul><li>1 修改成<code>html</code>格式即可 </li></ul></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023083422225.png" alt="image-20201023083422225"></p><blockquote><ul><li>2 用<code>notepad++</code> 打开zip文件也可以看到flag</li></ul></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023083545230.png" alt="image-20201023083545230"></p><h2 id="详情信息"><a href="#详情信息" class="headerlink" title="详情信息"></a>详情信息</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023084230175.png" alt="image-20201023084230175"></p><ul><li>分析</li></ul><blockquote><p>根据题目提示查看详情信息</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024165803536.png" alt="image-20201024165803536"></p><h2 id="发图不留种"><a href="#发图不留种" class="headerlink" title="发图不留种"></a>发图不留种</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023085124521.png" alt="image-20201023085124521"></p><ul><li>分析</li></ul><blockquote><p>下载下来图片 修改后缀<code>zip</code></p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023085238620.png" alt="image-20201023085238620"></p><h2 id="看不见的字"><a href="#看不见的字" class="headerlink" title="看不见的字"></a>看不见的字</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023085336904.png" alt="image-20201023085336904"></p><ul><li>分析</li></ul><blockquote><p>下载是一个zip 解压出来有一个<code>flag.pdf</code> 考的是<code>pdf</code>隐写</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023085559650.png" alt="image-20201023085559650"></p><h2 id="真假flag"><a href="#真假flag" class="headerlink" title="真假flag"></a>真假flag</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023085743528.png" alt="image-20201023085743528"></p><ul><li>分析</li></ul><blockquote><p>下载出来有10000个长得像flag的，可以用正则表达式筛选出来</p><p>正则表达式<code>语法</code>：</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023092253763.png" alt="image-20201023092253763"></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023092416788.png" alt="image-20201023092416788"></p><blockquote><p>python中<code>re</code>模块:</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023092532377.png" alt="image-20201023092532377"></p><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023092205242.png" alt="image-20201023092205242"></p><h2 id="被加密的实验报告"><a href="#被加密的实验报告" class="headerlink" title="被加密的实验报告"></a>被加密的实验报告</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023092716327.png" alt="image-20201023092716327"></p><ul><li>分析</li></ul><blockquote><p>Word打开有密码 用WinHex打开 <code>Ctrl+F</code> 搜索flag字符串</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023210330888.png" alt="image-20201023210330888"></p><h2 id="╯°□°）╯︵-┻━┻"><a href="#╯°□°）╯︵-┻━┻" class="headerlink" title="(╯°□°）╯︵ ┻━┻"></a>(╯°□°）╯︵ ┻━┻</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023102057079.png" alt="image-20201023102057079"></p><ul><li>分析</li></ul><blockquote><p>很容易判断出字符串是十六进制，再转ASCII编码  长度有134个 用脚本将它们分离出来</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023103250479.png" alt="image-20201023103250479"></p><h2 id="第四扩展FS"><a href="#第四扩展FS" class="headerlink" title="第四扩展FS"></a>第四扩展FS</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023110320416.png" alt="image-20201023110320416"></p><ul><li>分析</li></ul><blockquote><p>下载下来是一张jpg图片，考的是图片隐写</p></blockquote><ul><li><p>解题</p><ul><li><code>先用binwalk分解jpg图片，发现有个zip压缩包</code></li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023111405561.png" alt="image-20201023111405561"></p><ul><li><code>zip压缩包有密码，通过查看windows图片属性发现有密码</code></li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023111601665.png" alt="image-20201023111601665"></p></li></ul><p>  <img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023110930017.png" alt="image-20201023110930017"></p><ul><li><p><code>解压出来一个file.txt 根据提示频率，统计一下字符出现频率</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023112122001.png" alt="image-20201023112122001"></p><blockquote><p>拼接起来就是flag</p></blockquote></li></ul><h2 id="welcome"><a href="#welcome" class="headerlink" title="welcome"></a>welcome</h2><ul><li>题目：</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023205332257.png" alt="image-20201023205332257"></p><ul><li>分析</li></ul><blockquote><p>图片隐写</p></blockquote><ul><li>解题</li></ul><blockquote><p>StegSolve 打开，Stereogram设置offset，当offset为80时，flag出来了</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023205546654.png" alt="image-20201023205546654"></p><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027101223399.png" alt="image-20201027101223399"></p><ul><li>分析</li></ul><blockquote><p>下载解压出来一个数据包</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027101344345.png" alt="image-20201027101344345"></p><blockquote><p>把IMF文件导出来</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027101428717.png" alt="image-20201027101428717"></p><blockquote><p>浏览了一下发现有一封邮件里包含了base64</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027101601185.png" alt="image-20201027101601185"></p><blockquote><p>把这段base64拿去解密，发现是png头部，把解密内容导入到png文件</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027102317635.png" alt="image-20201027102317635"></p><blockquote><p>打开png图片发现了一段rsa密钥</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027102418154.png" alt="image-20201027102418154"></p><blockquote><p>拿到网上识别一下，根据提示，补全RSA</p><p>这里有个坑 识别的话可能有些字符会识别不出来，需要自己补充！</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICXAIBAAKBgQDCm6vZmclJrVH1AAyGuCuSSZ8O+mIQiOUQCvN0HYbj8153JfSQLsJIhbRYS7+zZ1oXvPemWQDv&#x2F;u&#x2F;tzegt58q4ciNmcVnq1uKiygc6QOtvT7oiSTyOvMX&#x2F;q5iE2iClYUIHZEKX3BjjNDxrYvLQzPyGD1EY2DZIO6T45FNKYC2VDwIDAQABAoGAbtWUKUkx37lLfRq7B5sqjZVKdpBZe4tL0jg6cX5Djd3Uhk1inR9UXVNw4&#x2F;y4QGfzYqOn8+Cq7QSoBysHOeXSiPztW2cL09ktPgSlfTQyN6ELNGuiUOYnaTWYZpp&#x2F;QbRcZ&#x2F;eHBulVQLlk5M6RVs9BLI9X08RAl7EcwumiRfWas6kCQQDvqC0dxl2wIjwNczILcoWLig2c2u71Nev9DrWjWHU8eHDuzCJWvOUAHIrkexddWEK2VHd+F13GBCOQZCM4prBjAkEAz+ENahsEjBE4+7H1HdIaw0+goe&#x2F;45d6A2ewO&#x2F;lYH6dDZTAzTW9z9kzV8uz+Mmo5163&#x2F;JtvwYQcKF39DJGGtqZQJBAKa18XR16fQ9TFL64EQwTQ+tYBzN+04eTWQCmH3haeQ&#x2F;0Cd9XyHBUveJ42Be8&#x2F;jeDcIx7dGLxZKajHbEAfBFnAsCQGq1AnbJ4Z6opJCGu+UP2c8SC8m0bhZJDelPRC8IKE28eB6SotgP61ZqaVmQ+HLJ1&#x2F;wH&#x2F;5pfc3AmEyRdfyx6zwUCQCAH4SLJv&#x2F;kprRz1a1gx8FR5tj4NeHEFFNEgq1gmiwmH2STT5qZWzQFz8NRe+&#x2F;otNOHBR2Xk4e8IS+ehIJ3TvyE&#x3D;</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><blockquote><p>把RSA密钥导入<code>wireshark</code> 的<code>SSL</code>协议中</p></blockquote><blockquote><p>现在数据包里是没有http协议的</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027102928181.png" alt="image-20201027102928181"></p><blockquote><p>将密钥导入</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027103134777.png" alt="image-20201027103134777"></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027103114114.png" alt="image-20201027103114114"></p><blockquote><p>导出来后http协议包出来了</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027103211560.png" alt="image-20201027103211560"></p><blockquote><p>追踪流一下就可以拿到flag了</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027103311569.png" alt="image-20201027103311569"></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201027103337099.png" alt="image-20201027103337099"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://oj.x10sec.org/&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;格式不正确&quot;&gt;&lt;a href=&quot;#格式不正确&quot; class=&quot;headerlink&quot; title=&quot;格式不正确&quot;</summary>
      
    
    
    
    <category term="CTF" scheme="https://ey404.github.io/categories/CTF/"/>
    
    
    <category term="安全杂项" scheme="https://ey404.github.io/tags/%E5%AE%89%E5%85%A8%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界-Web2</title>
    <link href="https://ey404.github.io/2020/10/26/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web2/"/>
    <id>https://ey404.github.io/2020/10/26/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web2/</id>
    <published>2020-10-26T08:12:45.000Z</published>
    <updated>2020-10-26T08:16:43.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$miwen=<span class="string">&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">    $_o=strrev($str);</span><br><span class="line">    <span class="comment">// echo $_o;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_o);$_0++)&#123;</span><br><span class="line">       </span><br><span class="line">        $_c=substr($_o,$_0,<span class="number">1</span>);</span><br><span class="line">        $__=ord($_c)+<span class="number">1</span>;</span><br><span class="line">        $_c=chr($__);</span><br><span class="line">        $_=$_.$_c;   </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> str_rot13(strrev(base64_encode($_)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ul><li>代码中所用到的函数</li></ul><blockquote><p>strrev — 反转字符串</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024103355812.png" alt="image-20201024103134851"></p><blockquote><p>strlen — 获取字符串长度</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024103134851.png" alt="image-20201024103355812"></p><blockquote><p>substr — 返回字符串的子串</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024103500156.png" alt="image-20201024103238196"></p><blockquote><p>ord — 转换字符串第一个字节为 0-255 之间的值</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024103238196.png" alt="image-20201024103500156"></p><blockquote><p>chr — 返回指定的字符</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024103723312.png" alt="image-20201024103723312"></p><blockquote><p>str_rot13 — 对字符串执行 ROT13 转换</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024103828672.png" alt="image-20201024103828672"></p><ul><li><p>代码结构分析</p><ul><li><p>对<code>$str</code>字符串进行反转 并且赋值给 <code>$_o</code></p></li><li><p>一个<code>for</code>循环 遍历了变量<code>$_o</code></p><p>依次取变量<code>$_o</code>的第<code>$_0</code>个值并赋值给变量<code>$c</code></p><p>把变量<code>$c</code> 转换为<em>ASCII码</em> + 1 并赋值给变量 <code>$__</code></p><p>再将变量<code>$__</code>转换回字符 并赋值给变量 <code>$c</code></p><p>循环结束将结果拼接起来 并赋值给 变量<code>$_</code></p></li><li><p>按顺序对变量<code>$_</code> base64加密字符串–&gt;strrev反转字符串–&gt;str_rot13加密字符串</p></li></ul></li><li><p>解题思路</p><p>把加密算法逆向算出来就行了</p></li></ul><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$miwen = <span class="string">&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;</span>;</span><br><span class="line">$str = base64_decode(strrev(str_rot13($miwen)));</span><br><span class="line">$flag = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>($a=<span class="number">0</span>;$a&lt;strlen($str);$a++)&#123;</span><br><span class="line">$b=substr($str,$a,<span class="number">1</span>);</span><br><span class="line">$o=ord($b)<span class="number">-1</span>;</span><br><span class="line">$c=chr($o);</span><br><span class="line">$flag=$flag.$c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> strrev($flag);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​    <img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024111206112.png" alt="image-20201024111206112"></p><p>​      </p><p>​      </p><p>​      </p><p>​      </p><p>​      </p><p>​      </p><p>​      </p><p>​      </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl</summary>
      
    
    
    
    <category term="CTF" scheme="https://ey404.github.io/categories/CTF/"/>
    
    
    <category term="Web安全" scheme="https://ey404.github.io/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网页攻防Web笔记</title>
    <link href="https://ey404.github.io/2020/10/23/%E7%BD%91%E9%A1%B5%E6%94%BB%E9%98%B2Web%E7%AC%94%E8%AE%B0/"/>
    <id>https://ey404.github.io/2020/10/23/%E7%BD%91%E9%A1%B5%E6%94%BB%E9%98%B2Web%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-23T07:01:24.000Z</published>
    <updated>2020-10-26T08:30:47.661Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://oj.x10sec.org/">项目地址</a></p></blockquote><h2 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h2><ul><li>题目：</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022193722982.png" alt="image-20201022193722982"></p><ul><li>分析：</li></ul><blockquote><p>此题考的PHP<code>弱类型</code>绕过</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line">$b = <span class="string">&#x27;1a&#x27;</span>;</span><br><span class="line">$a == $b; <span class="comment">//true</span></span><br><span class="line">$a === $b; <span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>== 在进行比较的时候会先把字符串类型转换成相同再比较</p><p>=== 在进行比较的时候 会先判断两种字符串的类型是否相等再比较</p></blockquote><ul><li><p>解题：</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022194232509.png" alt="backgroup"></p></li></ul><h2 id="什么是头信息"><a href="#什么是头信息" class="headerlink" title="什么是头信息"></a>什么是头信息</h2><ul><li>题目：</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022195400857.png" alt="image-20201022194232509"></p><ul><li>分析：</li></ul><blockquote><p>根据题目得知<code>F12</code>查看头文件内容</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200014135.png" alt="image-20201022195556792"></p><h2 id="什么是源代码"><a href="#什么是源代码" class="headerlink" title="什么是源代码"></a>什么是源代码</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022195705963.png" alt="image-20201022195705963"></p><ul><li>分析</li></ul><blockquote><p><code>F12查看源代码</code></p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200149646.png" alt="image-20201022200014135"></p><blockquote><p><strong>或者</strong>：</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200216491.png" alt="image-20201022200149646"></p><h2 id="什么是GET"><a href="#什么是GET" class="headerlink" title="什么是GET"></a>什么是GET</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200342707.png" alt="image-20201022200342707"></p><ul><li>分析</li></ul><blockquote><p>根据题目提示直接GET提交参数</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200608947.png" alt="image-20201022200608947"></p><h2 id="什么是POST"><a href="#什么是POST" class="headerlink" title="什么是POST"></a>什么是POST</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200716195.png" alt="image-20201022200216491"></p><ul><li>分析</li></ul><blockquote><p>用hackbar<code>POST</code> 提交参数即可</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022200953219.png" alt="image-20201022200953219"></p><h2 id="网页跳转方式一"><a href="#网页跳转方式一" class="headerlink" title="网页跳转方式一"></a>网页跳转方式一</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022201241113.png" alt="image-20201022200716195"></p><ul><li>分析</li></ul><blockquote><p>根据题目提示<code>F12</code>查看源代码</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022201125238.png" alt="image-20201022203949592"></p><h2 id="MD5简单碰撞器"><a href="#MD5简单碰撞器" class="headerlink" title="MD5简单碰撞器"></a>MD5简单碰撞器</h2><ul><li>题目：</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022203949592.png" alt="image-20201022201241113"></p><ul><li>分析</li></ul><blockquote><p>如果md的值是0e开头的 那么就与其它0e开头的md5值是相同的</p></blockquote><p><code>代码测试</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = md5(<span class="string">&#x27;s1665632922a&#x27;</span>); <span class="comment">// = 0e731198061491163073197128363787</span></span><br><span class="line">$b = md5(<span class="string">&#x27;s878926199a&#x27;</span>); <span class="comment">// = 0e545993274517709034328855841020</span></span><br><span class="line">var_dump($a == $b);<span class="comment">// true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>根据源代码分析得知: </p><p>构造一个用户名为<code>admin</code> 密码为<code>s878926199a</code>(经过md5加密后0e开头) 即可绕过</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022205001206.png" alt="image-20201022201125238"></p><h2 id="本地的诱惑"><a href="#本地的诱惑" class="headerlink" title="本地的诱惑"></a>本地的诱惑</h2><ul><li>题目：</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022215639305.png" alt="image-20201022205001206"></p><ul><li>分析：</li></ul><blockquote><p>根据题目得知需要从本地访问</p><p>Burp抓包 构造一个<code>X-Forwarded-For</code>头 </p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022215839435.png" alt="image-20201022215839435"></p><h2 id="比较数字大小"><a href="#比较数字大小" class="headerlink" title="比较数字大小"></a>比较数字大小</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022220034885.png" alt="image-20201022215639305"></p><ul><li>分析</li></ul><blockquote><p>根据题目得知只要比服务器上的数字大就好了</p><p>F12修改</p></blockquote><ul><li>解题</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022220249885.png" alt="image-20201022220249885"></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201022220303416.png" alt="image-20201022220034885"></p><h2 id="简单认证"><a href="#简单认证" class="headerlink" title="简单认证"></a>简单认证</h2><ul><li>题目</li></ul><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024195017348.png" alt="image-20201024195017348"></p><ul><li>分析</li></ul><blockquote><p>打开网站首页发现了一个admin.php 显示只允许admin登陆</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024195418692.png" alt="image-20201024195418692"></p><blockquote><p>根据提示cookie 抓包 发现 cookie role=<code>bm9ib2R5</code>base64解密为nobody</p><p>把admin base64加密一下上传即可得到flag</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201024195820163.png" alt="image-20201024195820163"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://oj.x10sec.org/&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;PHP弱类型&quot;&gt;&lt;a href=&quot;#PHP弱类型&quot; class=&quot;headerlink&quot; title=&quot;PHP弱</summary>
      
    
    
    
    <category term="CTF" scheme="https://ey404.github.io/categories/CTF/"/>
    
    
    <category term="Web安全" scheme="https://ey404.github.io/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Upload-labs通关笔记</title>
    <link href="https://ey404.github.io/2020/10/23/Upload-labs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
    <id>https://ey404.github.io/2020/10/23/Upload-labs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-23T06:47:06.000Z</published>
    <updated>2020-10-28T06:21:14.717Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/c0ny1/upload-labs">项目地址</a></p><p><code>Pass01-16</code></p></blockquote><h2 id="pass-01"><a href="#pass-01" class="headerlink" title="pass-01"></a>pass-01</h2><p><code>F12前端修改 console控制台执行 文件上传成功</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020220158338.png" alt="image-20201020220158338"></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020220215601.png" alt="image-20201020220215601"></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020220651159.png" alt="image-20201020220651159"></p><p>修改<code>content-type</code> 绕过</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020220825829.png" alt="image-20201020220825829"></p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020221049267.png" alt="image-20201020221049267"></p><p><code>phtml绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020221208589.png" alt="image-20201020221208589"></p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020221427410.png" alt="image-20201020221427410"></p><p><code>上传 .htaccess绕过</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd-php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020221604088.png" alt="image-20201020221604088"></p><p><code>这样所有的文件都会被解析成php</code></p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020223052144.png" alt="image-20201020223052144"></p><p><code>后缀名中加空绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201020223033471.png" alt="image-20201020223033471"></p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021220855332.png" alt="image-20201021220855332"></p><p><code>文件名大小写绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021220937946.png" alt="image-20201021220937946"></p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021221216989.png" alt="image-20201021221216989"></p><p><code>后缀名加空绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021221206692.png" alt="image-20201021221206692"></p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021221523966.png" alt="image-20201021221523966"></p><p><code>后缀名加 . 绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021221609821.png" alt="image-20201021221609821"></p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021221721305.png" alt="image-20201021221721305"></p><p><code>::$DATA 绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021221857626.png" alt="image-20201021221857626"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021222129072.png" alt="image-20201021222129072"></p><p><code>构造 .(空格). 绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021222348939.png" alt="image-20201021222348939"></p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021223210264.png" alt="image-20201021223210264"></p><p><code>构造后缀名双写绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021223257857.png" alt="image-20201021223257857"></p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021223427062.png" alt="image-20201021223427062"></p><p><code>get方式 %00 截断绕过 </code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021224644694.png" alt="image-20201021224644694"></p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021224920223.png" alt="image-20201021224920223"></p><p><code>post %00截断</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021225033720.png" alt="image-20201021225033720"></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021225107502.png" alt="image-20201021225107502"></p><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021225848280.png" alt="image-20201021225848280"></p><p><code>生成图片木马上传</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201021225919035.png" alt="image-20201021225919035"></p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023141301726.png" alt="image-20201023141301726"></p><p><code>这一关用 getimagesize获取文件类型</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023141519268.png" alt="image-20201023141519268"></p><blockquote><p>如果上传的不是图像，<code>getimagesize()</code>就会返回<code>FALSE</code> 这里继续用<code>图片马</code>+<code>GIF89A</code>文件头绕过</p></blockquote><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023142226024.png" alt="image-20201023142226024"></p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023142550074.png" alt="image-20201023142550074"></p><p><code>这一关用php_exif模块来判断类型，继续用图片马即可绕过</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023143023208.png" alt="image-20201023143023208"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/c0ny1/upload-labs&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pass01-16&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;pass-01&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="文件上传" scheme="https://ey404.github.io/categories/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    
    <category term="Web安全" scheme="https://ey404.github.io/tags/Web%E5%AE%89%E5%85%A8/"/>
    
    <category term="上传绕过" scheme="https://ey404.github.io/tags/%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87/"/>
    
    <category term="CTF" scheme="https://ey404.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP面向对象</title>
    <link href="https://ey404.github.io/2020/09/26/php%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>https://ey404.github.io/2020/09/26/php%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-09-26T08:17:48.000Z</published>
    <updated>2020-10-25T00:38:01.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h2><h3 id="类的概念"><a href="#类的概念" class="headerlink" title="类的概念"></a>类的概念</h3><p>✔类是由相同属性和方法构成</p><p>✔一个类可以产生千千万万个对象</p><h3 id="对象的概念"><a href="#对象的概念" class="headerlink" title="对象的概念"></a>对象的概念</h3><p>✔对象也是属性(特征)和方法(行为)构成的</p><p>✔先有类，后有对象</p><h2 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h2><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//成员属性</span></span><br><span class="line"><span class="keyword">public</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> $age = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$this-&gt;name&#125;</span>的年龄是<span class="subst">&#123;$this-&gt;age&#125;</span>岁&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="类的成员属性"><a href="#类的成员属性" class="headerlink" title="类的成员属性"></a>类的成员属性</h2><h3 id="成员属性介绍"><a href="#成员属性介绍" class="headerlink" title="成员属性介绍"></a>成员属性介绍</h3><p>类中只有两个内容，分别为：成员属性和成员方法。类的成员就是对象，因此，又称为“对象属性”“对象方法”。</p><h3 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h3><p>作用：主要用来保护数据的安全。<br>✔public(公共权限)：在任何地方都可以访问，主要指类内部、类外部、子类中都可以访问。<br>✔protected(受保护的权限)：只能在本类中、子类中被访问，在类外不能访问。<br>✔private(私有的权限)：只能在本类中被访问，在类外、子类中都无权访问。</p><h2 id="类的成员方法"><a href="#类的成员方法" class="headerlink" title="类的成员方法"></a>类的成员方法</h2><h3 id="成员方法介绍"><a href="#成员方法介绍" class="headerlink" title="成员方法介绍"></a>成员方法介绍</h3><p>✔成员方法，就是普通函数</p><p>✔成员方法可以省略权限控制符，默认为 public</p><h3 id="定义格式"><a href="#定义格式" class="headerlink" title="定义格式"></a>定义格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//成员方法的定义格式</span></span><br><span class="line">权限控制符 <span class="function"><span class="keyword">function</span> <span class="title">funcName</span>(<span class="params">形参<span class="number">1</span>,形参<span class="number">2</span>,...</span>)</span>&#123;</span><br><span class="line"><span class="comment">//方法的功能代码；</span></span><br><span class="line">[<span class="keyword">return</span> 参数]</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="举例说明-1"><a href="#举例说明-1" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student 类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//成员方法(对象方法)：一个方法完成一个小功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$str = <span class="string">&quot;<span class="subst">&#123;$name&#125;</span>的年龄是<span class="subst">&#123;$age&#125;</span>岁&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="类的实例对象"><a href="#类的实例对象" class="headerlink" title="类的实例对象"></a>类的实例对象</h2><h3 id="实例对象含义"><a href="#实例对象含义" class="headerlink" title="实例对象含义"></a>实例对象含义</h3><p>✔类可以产生 N 多个对象</p><p>✔用 new 关键字来创建类的对象</p><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//创建类的对象的语法(类的实例)</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> ClassName;<span class="comment">//无参数无括号</span></span><br><span class="line">$obj2 = <span class="keyword">new</span> ClassName();<span class="comment">//无参数有括号</span></span><br><span class="line">$obj3 = <span class="keyword">new</span> ClassName(实参<span class="number">1</span>,实参<span class="number">2.</span>..) <span class="comment">//有参数有括号</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="举例说明-2"><a href="#举例说明-2" class="headerlink" title="举例说明"></a>举例说明</h3><p>注意：对象不能单独存在，对象必须归属于哪个类。没有类，一定没有对象</p><h2 id="对象属性的操作"><a href="#对象属性的操作" class="headerlink" title="对象属性的操作"></a>对象属性的操作</h2><h3 id="对象属性的操作：增加、删除、修改、读取"><a href="#对象属性的操作：增加、删除、修改、读取" class="headerlink" title="对象属性的操作：增加、删除、修改、读取"></a>对象属性的操作：增加、删除、修改、读取</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//成员属性:对象属性</span></span><br><span class="line"><span class="keyword">public</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> $age = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类的实例</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//(1)修改对象的属性：对已存在的属性重新赋值</span></span><br><span class="line"><span class="comment">//$obj-&gt;$name表示访问$name变量的属性</span></span><br><span class="line"><span class="comment">//$obj访问属性，属性不加$符号</span></span><br><span class="line">$obj-&gt;name = <span class="string">&quot;b&quot;</span>;</span><br><span class="line">$obj-&gt;age = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//(2)添加属性：给不存在的属性赋值</span></span><br><span class="line">$obj-&gt;edu = <span class="string">&quot;c&quot;</span>;</span><br><span class="line">$obj-&gt;city = <span class="string">&quot;BeiJing&quot;</span>;</span><br><span class="line"><span class="comment">//(3)删除属性</span></span><br><span class="line"><span class="keyword">unset</span>($obj-&gt;edu,$obj-&gt;city);</span><br><span class="line"><span class="comment">//(4)读取对象属性值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$obj-&gt;name&#125;</span>的年龄是<span class="subst">&#123;$obj-&gt;age&#125;</span>岁&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="伪变量-this使用"><a href="#伪变量-this使用" class="headerlink" title="伪变量$this使用"></a>伪变量$this使用</h2><h3 id="this变量含义"><a href="#this变量含义" class="headerlink" title="$this变量含义"></a>$this变量含义</h3><p>✔PHP 中$this 变量代表当前对象。</p><p>✔$this 代表当前对象，用来调用对象的属性和方法</p><p>✔$this 只能在成员方法中存在，其它地方都不能使用</p><h3 id="举例说明-3"><a href="#举例说明-3" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//成员属性：对象属性</span></span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> $age = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//私有的成员方法 ： 放置一条水平线</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">showLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成员方法：对象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="string">&quot;&lt;h2&gt;<span class="subst">&#123;$this-&gt;name&#125;</span>的基本信息如下&lt;/h2&gt;&quot;</span>;</span><br><span class="line">$str .= <span class="keyword">$this</span>-&gt;showLine();</span><br><span class="line">$str .= <span class="string">&quot;<span class="subst">&#123;$this-&gt;name&#125;</span>的年龄是<span class="subst">&#123;$this-&gt;age&#125;</span>岁&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student;</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/234654132.PNG" alt="234654132"></p><h2 id="定义类的常量"><a href="#定义类的常量" class="headerlink" title="定义类的常量"></a>定义类的常量</h2><h3 id="类常量介绍"><a href="#类常量介绍" class="headerlink" title="类常量介绍"></a>类常量介绍</h3><p>✔常量：值就是值永远不变的量，常量不能修改，常量也不能删除</p><p>✔类常量定义使用 const 关键字。define()定义的常量为全局常量</p><p>✔类常量，只能通过类名来调用( 类名:: 常量)；成员的东西，只能通过对象来调用</p><p>✔访问类常量，是通过 范围解析符(::)来访问类的常量。例如：Student::TITLE</p><p>✔类常量在内存中只有一份，不会随着对象的增加而增加。类常量可以被所有对象共享</p><h3 id="定义格式-1"><a href="#定义格式-1" class="headerlink" title="定义格式"></a>定义格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*类常量的定义格式</span></span><br><span class="line"><span class="comment">const 常量名 = 常量值</span></span><br><span class="line"><span class="comment">语法说明:</span></span><br><span class="line"><span class="comment">(1)常量没有权限访问符</span></span><br><span class="line"><span class="comment">(2)const定义的常量，一般认为局部常量</span></span><br><span class="line"><span class="comment">(3)常量名不加$符号，尽量全大写</span></span><br><span class="line"><span class="comment">(4)常量的值，必须是一个固定的值</span></span><br><span class="line"><span class="comment">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="举例说明-4"><a href="#举例说明-4" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="comment">//类常量</span></span><br><span class="line">    <span class="keyword">const</span> DB_HOST = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> DB_USER = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> DB_PASS = <span class="string">&quot;password&quot;</span>;</span><br><span class="line">    <span class="comment">//公共的成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $str = <span class="string">&quot;主机名: &quot;</span>.Student::DB_HOST;</span><br><span class="line">        $str .= <span class="string">&quot;&lt;br&gt;用户名: &quot;</span>.Student::DB_USER;</span><br><span class="line">        $str .= <span class="string">&quot;&lt;br&gt;密码: &quot;</span>.Student::DB_PASS;</span><br><span class="line">        <span class="keyword">echo</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//直接访问类的常量:静态化调用方式</span></span><br><span class="line">$str = <span class="string">&quot;主机名: &quot;</span>.Student::DB_HOST;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;用户名: &quot;</span>.Student::DB_USER;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;密码: &quot;</span>.Student::DB_PASS;</span><br><span class="line"><span class="keyword">echo</span> $str.<span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_11-17-56.png" alt="Snipaste_2020-01-12_11-17-56"></p><h2 id="静态属性和静态方法"><a href="#静态属性和静态方法" class="headerlink" title="静态属性和静态方法"></a>静态属性和静态方法</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>✔static 关键字修饰的属性，就是静态属性；</p><p>✔static 关键字修饰的方法，就是静态方法；</p><p>✔静态属性和静态方法，是通过“类名::静态属性或静态方法”方式来访问的</p><p>✔静态属性的值是可以改变的，可以被所有对象共享</p><p>✔静态属性和静态方法，是有权限限制的。</p><h3 id="举例说明-5"><a href="#举例说明-5" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//公共的静态属性(类的属性)</span></span><br><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> $title = <span class="string">&quot;&lt;h1&gt;This is A title&lt;/h1&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//私有的静态方法(类的方法)</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//公共的成员方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;</span><br><span class="line">$str = Student::$title;</span><br><span class="line">$str .= Student::showLine();</span><br><span class="line">$str .= <span class="string">&quot;<span class="subst">&#123;$name&#125;</span>的年龄是<span class="subst">&#123;$age&#125;</span>岁&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> Student();</span><br><span class="line">$obj1-&gt;showInfo(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">$obj2 = <span class="keyword">new</span> Student();</span><br><span class="line">$obj2-&gt;showInfo(<span class="string">&quot;b&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_11-24-20.png" alt="Snipaste_2020-01-12_11-24-20"></p><h3 id="self关键字"><a href="#self关键字" class="headerlink" title="self关键字"></a>self关键字</h3><p>✔$this 代表当前对象，self 代表当前类</p><p>✔$this 用来调用对象的东西：成员属性、成员方法；</p><p>✔self 用来调用类的东西：类常量、静态属性、静态方法；</p><p>✔$this 使用箭头(-&gt;)来调用成员属性、成员方法；</p><p>✔self 使用(::)来调用类常量、静态属性、静态方法；</p><p>✔$this 只能用在成员方法中；self 可以用在成员方法、静态方法中；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//公共的静态属性(类的属性)</span></span><br><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> $title = <span class="string">&quot;&lt;h1&gt;This is A title&lt;/h1&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//私有的静态方法(类的方法)</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//公共的成员方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;</span><br><span class="line">$str = <span class="built_in">self</span>::$title;</span><br><span class="line">$str .= <span class="built_in">self</span>::showLine();</span><br><span class="line">$str .= <span class="string">&quot;<span class="subst">&#123;$name&#125;</span>的年龄是<span class="subst">&#123;$age&#125;</span>岁&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> Student();</span><br><span class="line">$obj1-&gt;showInfo(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">$obj2 = <span class="keyword">new</span> Student();</span><br><span class="line">$obj2-&gt;showInfo(<span class="string">&quot;b&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_11-24-20-1578799560023.png" alt="Snipaste_2020-01-12_11-24-20"></p><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><h3 id="什么是析构方法"><a href="#什么是析构方法" class="headerlink" title="什么是析构方法"></a>什么是析构方法</h3><p>✔当销毁一个对象前，自动调用的方法，就是析构方法；</p><p>✔析构方法的名称是固定的：__destruct()</p><p>✔析构方法一定没有参数，析构方法一定是成员中方法；</p><p>✔析构方法的作用：垃圾回收。例如：可以断开数据库的连接、在线人数等</p><h3 id="语法格式-1"><a href="#语法格式-1" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//析构方法的定义格式</span></span><br><span class="line">权限控制符 <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">垃圾回收的功能代码</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="举例说明：对象什么时候销毁"><a href="#举例说明：对象什么时候销毁" class="headerlink" title="举例说明：对象什么时候销毁"></a>举例说明：对象什么时候销毁</h3><p>✔网页执行完毕，所有变量自动销毁，包含对象变量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;对象即将销毁!&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student;</span><br><span class="line"><span class="keyword">unset</span>($obj);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;这是网页的最后一行代码&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_11-30-08.png" alt="Snipaste_2020-01-12_11-30-08"></p><p>✔手动销毁变量，使用 unset()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;对象即将销毁&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student;</span><br><span class="line"><span class="keyword">unset</span>($obj);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;这是网页的最后一行代码&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_13-35-32.png" alt="Snipaste_2020-01-12_13-35-32"></p><h2 id="OOP-中内存的分配情况"><a href="#OOP-中内存的分配情况" class="headerlink" title="OOP  中内存的分配情况"></a>OOP  中内存的分配情况</h2><h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><p>PHP有8种数据类型：</p><p>✔标量数据类型：字符串型、整型、浮点型、布尔型</p><p>✔复合数据类型：数组、对象</p><p>✔特殊数据类型：资源、NULL</p><p>其中，字符串型、整型、浮点型、布尔型、数组，默认都是“值传递”。<br>其中，对象、资源，默认都是“引用传递”。</p><p>值传递定义：将一个变量的“值”，复制一份，传递给另一个变量；两个变量之间没有任何关系；<br>修改其中一个变量的值，另一个变量不会改变。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)值传递：将变量的值，复制给另外一个变量；</span></span><br><span class="line">$a = <span class="number">100</span>;</span><br><span class="line">$b = $a;<span class="comment">//将$a的值，复制了一份，传给$b</span></span><br><span class="line">$a = <span class="number">200</span>;<span class="comment">//重新给$a赋值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$a=<span class="subst">$a</span>,\$b=<span class="subst">$b</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_13-37-32.png" alt="Snipaste_2020-01-12_13-37-32"></p><h3 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h3><p>“引用传地址”将一个变量的“数据地址”，复制一份，传递给另一个变量；两个变量指向了“同一数据”；<br>修改其中一个变量的数据，另一个变量也会一起变。</p><p>PHP 中默认的“引用传地址”的数据类型是：对象和资源。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(2)引用传地址</span></span><br><span class="line"><span class="comment">//定义一个Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> $age = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类的对象</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//将$obj的“数据地址”复制一份,传给$obj2</span></span><br><span class="line">$obj2 = $obj1;</span><br><span class="line"><span class="comment">//给$obj2的属性重新赋值</span></span><br><span class="line">$obj2-&gt;name = <span class="string">&quot;b&quot;</span>;</span><br><span class="line">$obj2-&gt;age = <span class="number">2</span>;</span><br><span class="line">var_dump(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">var_dump($obj1);</span><br><span class="line">var_dump(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">var_dump($obj2);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_13-41-09.png" alt="Snipaste_2020-01-12_13-41-09"></p><p>“引用传地址”在内存中的表现形式？</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/4156464.PNG" alt="4156464"></p><h2 id="类的封装性"><a href="#类的封装性" class="headerlink" title="类的封装性"></a>类的封装性</h2><h3 id="什么是类的封装性"><a href="#什么是类的封装性" class="headerlink" title="什么是类的封装性"></a>什么是类的封装性</h3><p>✔类的封装性：将敏感数据保护起来，不被外界访问。</p><p>✔类的封装性实现，就是通过权限控制符来实现</p><p>✔在项目中，所有成员属性，一般都是 private、protected 权限</p><h3 id="访问权限修饰符介绍"><a href="#访问权限修饰符介绍" class="headerlink" title="访问权限修饰符介绍"></a>访问权限修饰符介绍</h3><p>✔public(公共权限)：在任何地方都可以被访问，主要是：类内、类外、子类中。</p><p>✔protected(受保护的权限)：只能在本类、子类中被访问。在类外禁止访问。</p><p>✔private(私有权限)：只能在本类中被访问。</p><p>✔成员属性、静态属性必须要加权限控制符，不能省略。</p><p>✔成员方法、静态方法可以不加权限控制符，默认为 public。建议都要加权限。</p><h3 id="举例说明-类的封装性"><a href="#举例说明-类的封装性" class="headerlink" title="举例说明(类的封装性)"></a>举例说明(类的封装性)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span></span>&#123;</span><br><span class="line"><span class="comment">//类常量定义</span></span><br><span class="line"><span class="keyword">const</span> COMPANY = <span class="string">&quot;&lt;h2&gt;Title&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//私有的静态的保存数量的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//私有的图书属性</span></span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"><span class="keyword">private</span> $author;</span><br><span class="line"><span class="keyword">private</span> $price;</span><br><span class="line"><span class="comment">//构造方法：对象初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$arr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = $arr[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;author = $arr[<span class="string">&#x27;author&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;price = $arr[<span class="string">&#x27;price&#x27;</span>];</span><br><span class="line"><span class="built_in">self</span>::$count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//水平线</span></span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showLine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//公共的自我显示的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="built_in">self</span>::COMPANY;</span><br><span class="line">$str .= <span class="built_in">self</span>::showLine();</span><br><span class="line">$str .= <span class="string">&quot;Book Name: <span class="subst">&#123;$this-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt; author: <span class="subst">&#123;$this-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt; price: <span class="subst">&#123;$this-&gt;price&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt; There are &quot;</span>.<span class="built_in">self</span>::$count.<span class="string">&quot;Book now&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建第一个对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;PHP从入门到放弃&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;author&#x27;</span> =&gt; <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;price&#x27;</span> =&gt; <span class="string">&#x27;100.00&#x27;</span>,</span><br><span class="line">);</span><br><span class="line">$obj1 = <span class="keyword">new</span> Book($arr);</span><br><span class="line"><span class="keyword">echo</span> $obj1-&gt;showInfo();</span><br><span class="line"><span class="comment">//创建第二个对象</span></span><br><span class="line">$arr2 = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;Mysql 从入门到跑路&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;author&#x27;</span> =&gt; <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;price&#x27;</span> =&gt; <span class="string">&#x27;200.00&#x27;</span>,</span><br><span class="line">);</span><br><span class="line">$obj2 = <span class="keyword">new</span> Book($arr2);</span><br><span class="line"><span class="keyword">echo</span> $obj2-&gt;showInfo();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023211842309.png" alt="image-20201023211732593"></p><h2 id="类的继承性"><a href="#类的继承性" class="headerlink" title="类的继承性"></a>类的继承性</h2><h3 id="继承的相关概念"><a href="#继承的相关概念" class="headerlink" title="继承的相关概念"></a>继承的相关概念</h3><p>✔继承：如果一个 B 类拥有了 A 类的所有特征信息，则我们就认为 B 类继承了 A 类</p><p>✔为什么继承？继承是为了实现功能的升级和扩展。</p><p>✔如果项目需要升级和扩展功能， 不能直接修改原类</p><h3 id="继承的语法格式"><a href="#继承的语法格式" class="headerlink" title="继承的语法格式"></a>继承的语法格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//继承的语法格式</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">ParentClass</span></span>&#123;</span><br><span class="line"><span class="comment">//子类的功能代码</span></span><br><span class="line">&#125;</span><br><span class="line">语法说明：</span><br><span class="line">（<span class="number">1</span>）subCLass代表是要创建的子类的名称</span><br><span class="line">（<span class="number">2</span>）<span class="keyword">extends</span> 是继承的关键字，不区分大小写</span><br><span class="line">（<span class="number">3</span>）ParentClass代表已经存在的父类或上层类</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="单继承的简单演示"><a href="#单继承的简单演示" class="headerlink" title="单继承的简单演示"></a>单继承的简单演示</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;&lt;h2&gt;Title&lt;/h2&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> $count = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">public</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> $age = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="built_in">self</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;<span class="subst">&#123;$this-&gt;name&#125;</span>的年龄是<span class="subst">&#123;$this-&gt;age&#125;</span>岁&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;一共有&quot;</span>.<span class="built_in">self</span>::$count.<span class="string">&quot;个学生&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个学生类，并继承学生类</span></span><br><span class="line"><span class="comment">//继承：将父类的所有内容全部拿过来，一个不剩的(除private权限外)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> ItcastStudent;</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023211732593.png" alt="image-20201023211842309"></p><h3 id="构造方法和析构方法的继承"><a href="#构造方法和析构方法的继承" class="headerlink" title="构造方法和析构方法的继承"></a>构造方法和析构方法的继承</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//私有的成员属性</span></span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"><span class="keyword">private</span> $age;</span><br><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$age2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = $name2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;age = $age2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//公共的自我显示的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$this-&gt;name&#125;</span>的年龄是<span class="subst">&#123;$this-&gt;age&#125;</span>岁!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个ItcastStudent类，并继承Student类</span></span><br><span class="line"><span class="comment">//继承：将父类的所有内容全部拿过来，一个不剩的(除private权限外)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastStudet</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> ItcastStudet(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023211912704.png" alt="image-20201023211912704"></p><h3 id="parent关键字"><a href="#parent关键字" class="headerlink" title="parent关键字"></a>parent关键字</h3><p>✔self 代表当前类，parent 代表父类</p><p>✔self 可以调用本类的内容：类常量、静态属性、静态方法、成员方法；</p><p>✔parent 可以调用父类的内容：类常量、静态属性、静态方法、成员方法；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;Title&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> $db_host = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;这是静态方法&quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;这是成员方法&quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个ItStudent类继承Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">intro</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;这是成员方法&quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="string">&quot;父类的常量：&quot;</span>.<span class="built_in">parent</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;子类的常量&quot;</span>.<span class="built_in">self</span>::TITLE;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;父类的静态属性：&quot;</span>.<span class="built_in">parent</span>::$db_host;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;子类的静态属性：&quot;</span>.<span class="built_in">self</span>::$db_host;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;父类的静态方法：&quot;</span>.<span class="built_in">parent</span>::readMe();</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;子类的静态方法：&quot;</span>.<span class="built_in">self</span>::readMe();</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> ItStudent;</span><br><span class="line">$obj-&gt;show();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20201023211943931.png" alt="image-20201023211943931"></p><h2 id="类的多态"><a href="#类的多态" class="headerlink" title="类的多态"></a>类的多态</h2><h3 id="什么是类的多态"><a href="#什么是类的多态" class="headerlink" title="什么是类的多态"></a>什么是类的多态</h3><p>✔类的多态，就是的类的多种形态</p><p>✔类的多态，主要指方法重载和方法重写；</p><p>✔方法重写：父类有一个方法，在子类用同样的名称再定义一次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params"></span>)</span>&#123;&#125; <span class="comment">//php不支持函数重名或方法重名</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/ppp.PNG" alt="5646+"></p><h3 id="方法重写的要求"><a href="#方法重写的要求" class="headerlink" title="方法重写的要求"></a>方法重写的要求</h3><p>✔子类中重写的方法名称，要与父类方法名称一致</p><p>✔子类中重写的方法的权限，不能低于父类方法的权限。</p><p>  如果父类方法权限为 public，则重写方法必须是 public；<br>  如果父类方法权限为 protected，则重写方法必须是 public、protected；<br>  如果父类方法权限为 private，则子类无法继承，无法继承。</p><h3 id="举例说明-6"><a href="#举例说明-6" class="headerlink" title="举例说明"></a>举例说明</h3><p>//重写前提：必须先继承在重写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//受保护的静态方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$a,$b</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$a&#125;</span>的年龄是<span class="subst">&#123;$b&#125;</span>岁&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//重写父类的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;</span><br><span class="line">$str = <span class="string">&quot;&lt;h1&gt;Title&lt;/h1&gt;&quot;</span>;</span><br><span class="line">$str .= <span class="built_in">parent</span>::showInfo($name,$age);</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//直接使用类名调用静态方法</span></span><br><span class="line">ItStudent::showInfo(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/4999.PNG" alt="4999"></p><h3 id="构造方法重写"><a href="#构造方法重写" class="headerlink" title="构造方法重写"></a>构造方法重写</h3><p>所有方法都可重写，但是，构造方法重写，没有参数个数要求，也就是参数个数可以不对等。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义商品类（基础类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shop</span></span>&#123;</span><br><span class="line"><span class="comment">//私有的商品属性</span></span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"><span class="keyword">private</span> $price;</span><br><span class="line"><span class="comment">//受保护的构造方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$price2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = $name2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;price = $price2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//受保护的自我显示的方法</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="string">&quot;商品名称：<span class="subst">&#123;$this-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;商品价格:<span class="subst">&#123;$this-&gt;price&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义手机类，并继承商品类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> <span class="keyword">extends</span> <span class="title">Shop</span></span>&#123;</span><br><span class="line"><span class="comment">//私有的手机属性</span></span><br><span class="line"><span class="keyword">private</span> $pinpai;</span><br><span class="line"><span class="keyword">private</span> $city;</span><br><span class="line"><span class="comment">//公共的构造方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name2,$price2,$pinpai2,$city2</span>)</span>&#123;</span><br><span class="line"><span class="comment">//调用父类的构造方法，并传递参数</span></span><br><span class="line"><span class="built_in">parent</span>::__construct($name2,$price2);</span><br><span class="line"><span class="keyword">$this</span>-&gt;pinpai = $pinpai2;</span><br><span class="line"><span class="keyword">$this</span>-&gt;city = $city2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//公共的自我显示方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$str = <span class="built_in">parent</span>::showInfo();</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;手机品牌: <span class="subst">&#123;$this-&gt;pinpai&#125;</span>&quot;</span>;</span><br><span class="line">$str .= <span class="string">&quot;&lt;br&gt;手机产地: <span class="subst">&#123;$this-&gt;city&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建手机类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Mobile(<span class="string">&quot;Apple18&quot;</span>,<span class="string">&quot;8888.00&quot;</span>,<span class="string">&quot;Apple&quot;</span>,<span class="string">&quot;cisco&quot;</span>);</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/65465161.PNG" alt="65465161"></p><h2 id="最终类和最终方法"><a href="#最终类和最终方法" class="headerlink" title="最终类和最终方法"></a>最终类和最终方法</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>✔Final 关键字修饰的类，就是最终类；</p><p>✔Final 关键字修饰的方法，就是最终方法；</p><p>✔最终类：该类不能被继承，直接实例化</p><p>✔最终方法：该方法不能被重写，直接调用即可</p><h3 id="举例说明-7"><a href="#举例说明-7" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">Class</span> <span class="title">Db</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//继承最终类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db2</span> <span class="keyword">extends</span> <span class="title">Db</span></span>&#123;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_10-37-53.png" alt="Snipaste_2020-01-12_10-37-53"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">public</span> funcion showInfo()&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//继承Db类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db2</span> <span class="keyword">extends</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="comment">//重写最终方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_10-41-07.png" alt="Snipaste_2020-01-12_10-41-07"></p><h2 id="抽象类和抽象方法"><a href="#抽象类和抽象方法" class="headerlink" title="抽象类和抽象方法"></a>抽象类和抽象方法</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>✔Abstract 关键字修饰的类，就是抽象类；</p><p>✔Abstract 关键字修饰的方法，就是抽象方法；</p><p>✔抽象类：该类只能被继承，不能直接实例化。</p><p>✔抽象方法：该方法没有方法体，抽象方法必须先继承，后重写。</p><h3 id="举例说明-8"><a href="#举例说明-8" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义抽象Shop类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Shop</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;Title&quot;</span>;</span><br><span class="line"><span class="comment">//抽象方法</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$a,$b</span>)</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义Mobile类，并继承商品基础类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> <span class="keyword">extends</span> <span class="title">Shop</span></span>&#123;</span><br><span class="line"><span class="comment">//重写showInfo()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$name&#125;</span>的年龄是<span class="subst">&#123;$age&#125;</span>岁！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写readMe()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;这是成员方法: &quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前函数是：&quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> Mobile();</span><br><span class="line">$obj-&gt;showInfo(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>);</span><br><span class="line">$obj-&gt;readMe();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_10-48-06.png" alt="Snipaste_2020-01-12_10-48-06"></p><h2 id="接口技术"><a href="#接口技术" class="headerlink" title="接口技术"></a>接口技术</h2><h3 id="接口定义"><a href="#接口定义" class="headerlink" title="接口定义"></a>接口定义</h3><p>✔PHP 只支持单继承</p><p>✔接口就是特殊的抽象类</p><p>✔interface 关键字，用来声明一个接口。</p><p>✔implements 关键字，创建一个子类，来实现接口</p><p>✔接口中只能存在两样东西：类常量、抽象方法</p><p>✔接口中的方法，默认都是抽象方法，因此，不加 abstract 关键字</p><p>✔接口中方法的权限，必须是 publi</p><p>✔接口中所有的抽象方法，在子类中必须要重写；</p><p>✔接口中的常量不能重写，只能继承</p><h3 id="举例说明-9"><a href="#举例说明-9" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)定义第1个接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Inter1</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;Title&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$a,$b</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(2)定义第2个接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Inter2</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(3)创建抽象的学生类，并实现多个接口</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Inter1</span>,<span class="title">Inter2</span></span>&#123;</span><br><span class="line"><span class="comment">//重写接口的showInfo()方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params">$name,$age</span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">//重写接口中的readMe()方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">readMe</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//(4)创建ItStudent类，并继承抽象类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ItStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//(5)创建ItStudent类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> ItStudent();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="举例说明-10"><a href="#举例说明-10" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">XiaoLingTong</span></span>&#123;</span><br><span class="line"><span class="comment">//打电话</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">tel</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Mp3</span></span>&#123;</span><br><span class="line"><span class="comment">//听音乐</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">music</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义Mp4接口，并且继承Mp3接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Mp4</span> <span class="keyword">extends</span> <span class="title">Mp3</span></span>&#123;</span><br><span class="line"><span class="comment">//看电影</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">film</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义类并实现继承多个接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mobile</span> <span class="keyword">implements</span> <span class="title">XiaoLingTong</span>,<span class="title">Mp4</span></span>&#123;</span><br><span class="line"><span class="comment">//重写tel()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">tel</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;phone!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写music()抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">music</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;listening music&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义玩游戏的方法 </span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">game</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;playing games!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">film</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;watching film&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建手机类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Mobile();</span><br><span class="line">$obj-&gt;tel();</span><br><span class="line">$obj-&gt;music();</span><br><span class="line">$obj-&gt;film();</span><br><span class="line">$obj-&gt;game();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_15-37-46.png" alt="Snipaste_2020-01-12_15-37-46"></p><h2 id="自动加载类函数-autload"><a href="#自动加载类函数-autload" class="headerlink" title="自动加载类函数(__autload())"></a>自动加载类函数(__autload())</h2><h3 id="类文件的命名规则"><a href="#类文件的命名规则" class="headerlink" title="类文件的命名规则"></a>类文件的命名规则</h3><p>✔将每一个功能，单独定义成一个类文件；</p><p>✔每一个类文件，尽量以”.class.php”结尾；例如：Student.class.php</p><p>✔类文件的主名，要与类名一致；例如：class Student{}</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_15-41-20.png" alt="Snipaste_2020-01-12_15-41-20"></p><h3 id="autoload-函数的语法"><a href="#autoload-函数的语法" class="headerlink" title="__autoload()函数的语法"></a>__autoload()函数的语法</h3><p>✔__autoload()是系统函数，不是方法，名称是固定的；</p><p>✔当使用一个不存在的类时，__autoload($className)会自动调用</p><p>✔函数的内容包含两方面</p><p>构建类文件的真实路径；</p><p>判断并包含类文件代码；</p><h2 id="自定义类文件加载函数"><a href="#自定义类文件加载函数" class="headerlink" title="自定义类文件加载函数"></a>自定义类文件加载函数</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>✔__autoload()有点局限性，如果类文件位于不同的目录，类文件名命名方式也不尽相同</p><p>✔自定义类文件加载函数：spl_autoload_register()，主要应用在项目中，可以应对不同的情况</p><p>✔每个函数就是一种类文件的加载规则。</p><h3 id="语法格式-2"><a href="#语法格式-2" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//自定义类文件加载函数spl_autoload_register()语法格式</span></span><br><span class="line"><span class="comment">//参数：是函数，有两种情况</span></span><br><span class="line"><span class="comment">//（1）参数是字符串的函数名称，函数传地址</span></span><br><span class="line"><span class="comment">//（2）参数也可以是匿名函数，函数传地址</span></span><br><span class="line">spl_autoload_register(<span class="string">&#x27;func1&#x27;</span>);</span><br><span class="line">spl_autoload_register(<span class="string">&#x27;func2&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//构建类文件路径</span></span><br><span class="line">$filename = <span class="string">&quot;./libs/<span class="subst">$className</span>.class.php&quot;</span>;</span><br><span class="line"><span class="comment">//如果类文件存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename)) <span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func2</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//构建类文件路径</span></span><br><span class="line">$filename = <span class="string">&quot;./public/<span class="subst">$className</span>.class.php&quot;</span>;</span><br><span class="line"><span class="comment">//如果类文件存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename)) <span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="对象克隆"><a href="#对象克隆" class="headerlink" title="对象克隆"></a>对象克隆</h2><h3 id="什么是对象克隆"><a href="#什么是对象克隆" class="headerlink" title="什么是对象克隆"></a>什么是对象克隆</h3><p>✔创建新对象有几种方式：(1)使用 new 关键字，(2)使用 clone 关键字</p><p>✔$obj2 = $obj1 是创建新对象吗？将$obj1 的地址复制给$obj2，$obj1 和$obj2 指向同一份数据。是同一<br>个对象。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//创建学生类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//将$obj1对象的地址，复制给$obj2</span></span><br><span class="line"><span class="comment">//$obj1和$obj2是同一个对象，一个对象不同名字</span></span><br><span class="line">$obj2 = $obj1;</span><br><span class="line">var_dump($obj1,$obj2)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_16-20-02.png" alt="Snipaste_2020-01-12_16-20-02"></p><h3 id="举例说明-11"><a href="#举例说明-11" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> $age = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//当对象克隆完成时，魔术方法 __clone()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = <span class="string">&quot;b&quot;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;age = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj1 = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//克隆新对象</span></span><br><span class="line">$obj2 = <span class="keyword">clone</span> $obj1;</span><br><span class="line">var_dump($obj1);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump($obj2);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_16-25-43.png" alt="Snipaste_2020-01-12_16-25-43"></p><h3 id="对象遍历"><a href="#对象遍历" class="headerlink" title="对象遍历"></a>对象遍历</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="keyword">protected</span> $age = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> $edu = <span class="string">&quot;senior high school&quot;</span>;</span><br><span class="line"><span class="comment">//在类中遍历对象所有属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showAllAttrs</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">$this</span> <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$obj-&gt;<span class="subst">$k</span> = <span class="subst">$v</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//在类外遍历公共的对象属性</span></span><br><span class="line"><span class="keyword">foreach</span>($obj <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$obj-&gt;<span class="subst">$k</span> = <span class="subst">$v</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line">$obj-&gt;showAllAttrs();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_16-33-09.png" alt="Snipaste_2020-01-12_16-33-09"></p><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="__toString()"></a>__toString()</h3><p>✔描述：将对象转成字符时，魔术方法__toString()会自动调用</p><p>✔语法：public string __toString(void)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//当将对象专成字符串时， __toString()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;对不起，对象不能转成字符串&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//将对象转成字符串，然后输出</span></span><br><span class="line"><span class="keyword">echo</span> $obj;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_16-38-25-1578818350051.png" alt="Snipaste_2020-01-12_16-38-25"></p><h3 id="invoke"><a href="#invoke" class="headerlink" title="__invoke()"></a>__invoke()</h3><p>描述:当把对象当成函数调用时，魔术方法__invoke()会自动调用。</p><p>语法：mixed __invoke(void)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//当对象当成函数调用,魔术方法__invoke()自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;对象不能当成函数调用&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//把对象当成函数调用</span></span><br><span class="line">$obj();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_16-38-25-1578818710411.png" alt="Snipaste_2020-01-12_16-38-25"></p><h2 id="面向对象设计模式"><a href="#面向对象设计模式" class="headerlink" title="面向对象设计模式"></a>面向对象设计模式</h2><h3 id="常用的设计模式"><a href="#常用的设计模式" class="headerlink" title="常用的设计模式"></a>常用的设计模式</h3><p>✔单例模式：一个类只能创建一个对象，不管用什么办法，都无法创建第 2 个对象</p><p>✔工厂模式：根据传递的不同类名，来创建不同类的对象的工厂</p><h3 id="单例设计的要求-三私一公"><a href="#单例设计的要求-三私一公" class="headerlink" title="单例设计的要求(三私一公)"></a>单例设计的要求(三私一公)</h3><p>✔一私：私有的静态的保存对象的属性</p><p>✔一私：私有的构造方法，阻止类外 new 对象；</p><p>✔一私：私有的克隆方法，阻止类外 clone 对象；</p><p>✔一公：公共的静态的创建对象的方法。</p><h3 id="举例说明-12"><a href="#举例说明-12" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//创建单例的Db类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="comment">//私有的静态保存对象的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $obj = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//私有的构造方法：阻止类外new对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">//私有的克隆方法：阻止类外clone对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">//公共的静态的创建对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断当前对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">self</span>::$obj <span class="keyword">instanceof</span> <span class="built_in">self</span>)&#123;</span><br><span class="line"><span class="comment">//如果对象不存在，则创建它</span></span><br><span class="line"><span class="built_in">self</span>::$obj = <span class="keyword">new</span> <span class="built_in">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回当前对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">self</span>::$obj;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Db类的对象</span></span><br><span class="line">$db1 = Db::getInstance();</span><br><span class="line">$db2 = Db::getInstance();</span><br><span class="line">var_dump($db1,$db2);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-12_16-52-57-1578819198358.png" alt="Snipaste_2020-01-12_16-52-57"></p><h3 id="instanceof关键字"><a href="#instanceof关键字" class="headerlink" title="instanceof关键字"></a>instanceof关键字</h3><p>✔描述：判断一个对象是不是某个类产生的对象</p><p>✔语法：$obj instanceof ClassName</p><p>✔返回：如果$obj 是ClassName的对象，则返回TRUE，否则，返回FALSE</p><h2 id="学生信息管理"><a href="#学生信息管理" class="headerlink" title="学生信息管理"></a>学生信息管理</h2><h3 id="面向对象开发流程"><a href="#面向对象开发流程" class="headerlink" title="面向对象开发流程"></a>面向对象开发流程</h3><p>✔面向过程是以过程为中心的编程思想；面向对象是以事物为中心的编程思想</p><p>✔所有类都可以产生 N 多个对象，所有对象都要归属于某个类</p><h3 id="单例模式（三私一公）"><a href="#单例模式（三私一公）" class="headerlink" title="单例模式（三私一公）"></a>单例模式（三私一公）</h3><p>✔单例模式：一个类只能创建一个对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终的单例的数据库工具类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="comment">//私有的静态的保存对象的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $obj = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//私有的构造方法：阻止类外new对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">//私有的克隆方法：阻止类外clone对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="comment">//公共的静态的创建对象的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断当前对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">self</span>::$obj <span class="keyword">instanceof</span> <span class="built_in">self</span>)&#123;</span><br><span class="line"><span class="comment">//如果对象不存在，则创建它</span></span><br><span class="line"><span class="built_in">self</span>::$obj = <span class="keyword">new</span> <span class="built_in">self</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果对象存在，直接返回</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">self</span>::$obj;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建数据库类的对象</span></span><br><span class="line">$db1 = Db::getInstance();</span><br><span class="line">$db2 = Db::getInstance();</span><br><span class="line">var_dump($db1,$db2);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipastsfsdf.png" alt="Snipaste_2020-01-13_09-18-33"></p><p>数据库操作类主要代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="comment">//私有的静态的保存对象的属性</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> $obj = <span class="literal">NULL</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的数据库配置信息</span></span><br><span class="line"><span class="keyword">private</span> $db_host;</span><br><span class="line"><span class="keyword">private</span> $db_user;</span><br><span class="line"><span class="keyword">private</span> $db_pass;</span><br><span class="line"><span class="keyword">private</span> $db_name</span><br><span class="line"><span class="keyword">private</span> $charset;</span><br><span class="line"></span><br><span class="line"><span class="comment">//私有的构造方法:阻止类外new对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> $config</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="连接数据库的公共文件"><a href="#连接数据库的公共文件" class="headerlink" title="连接数据库的公共文件"></a>连接数据库的公共文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//(1)类的自动加载</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params">$className</span>)</span>&#123;</span><br><span class="line"><span class="comment">//构建类文件的真实路径</span></span><br><span class="line">$filename = <span class="string">&quot;./libs/<span class="subst">$className</span>.class.php&quot;</span>;</span><br><span class="line"><span class="comment">//如果类文件存在，则包含</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename)) <span class="keyword">require_once</span>($filename);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//(2)创建数据库类的对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">);</span><br><span class="line">$db = Db:getInstance($arr);</span><br><span class="line">var_dump($db);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><h3 id="什么是工厂模式"><a href="#什么是工厂模式" class="headerlink" title="什么是工厂模式"></a>什么是工厂模式</h3><p>工厂模式：根据传递的不同类名，创建不同类的对象；</p><h3 id="工厂模式的设计要求"><a href="#工厂模式的设计要求" class="headerlink" title="工厂模式的设计要求"></a>工厂模式的设计要求</h3><p>✔工厂类中有一个私有的静态的属性，用来存储不同类的对象；</p><p>✔注意：该工厂类不创建对象。工厂类本身不是单例的。</p><h2 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h2><h3 id="什么是重载"><a href="#什么是重载" class="headerlink" title="什么是重载"></a>什么是重载</h3><p>✔PHP 所提供的”重载”（overloading）是指动态地”创建”类属性和方法。我们是通过魔术方法来实现的</p><p>✔所有的重载方法都必须被声明为 public。</p><p>✔这些魔术方法的参数都不能通过引用传递</p><h3 id="属性重载"><a href="#属性重载" class="headerlink" title="属性重载"></a>属性重载</h3><p>(1) __set()</p><p>✔描述:在给不可访问属性赋值时，__set()会被调用</p><p>✔语法:public void __set(string $name,mixed $value)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"><span class="keyword">private</span> $age;</span><br><span class="line"><span class="comment">//当给不可访问的属性赋值时， __set()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params">$name,$value</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;$name = $value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//给不可访问的属性赋值</span></span><br><span class="line">$obj-&gt;name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">$obj-&gt;age = <span class="number">1</span>;</span><br><span class="line">var_dump($obj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_14-02-47.png" alt="Snipaste_2020-01-13_14-02-47"></p><p>(2) __get()</p><p>✔描述:读取不可访问属性的值， __get()会被调用</p><p>✔语法:public mixed __get(string $name)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="comment">//当读取不可访问属性的值时， __get()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$name</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;$name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//读取私有属性的值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;my name is: <span class="subst">&#123;$obj-&gt;name&#125;</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_14-18-35.png" alt="Snipaste_2020-01-13_14-18-35"></p><p>(3) __isset()</p><p>✔描述： 当对不可访问属性调用 unset()时， __unset()会被调用</p><p>✔语法：public void __unset(string $name)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="comment">//当对私有属性使用isset()或empty()操作时，__isset()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params">$name</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;不能对私有属性使用isset()或empty()&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//判断私有属性是否存在</span></span><br><span class="line"><span class="keyword">isset</span>($obj-&gt;name);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_15-19-14.png" alt="Snipaste_2020-01-13_15-19-14"></p><p>(4) __unset()</p><p>✔描述：当对不可访问属性调用 unset() 时，__unset()会被调用</p><p>✔语法：public void __unset ( string $name )</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line"><span class="comment">//当对私有属性使用unset()操作时，__unset()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params">$name</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;不能对私有属性使用unset()!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//删除私有属性</span></span><br><span class="line"><span class="keyword">unset</span>($obj-&gt;name);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_15-58-04.png" alt="Snipaste_2020-01-13_15-58-04"></p><h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3><p>(1) __call()</p><p>✔描述：在对象中调用一个不可访问方法时，__call() 会被调用</p><p>✔语法：public mixed __call ( string $name , array $arguments )</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//当调用不可访问的方法时，__call()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$func,$args</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;方法<span class="subst">&#123;$func&#125;</span>(&quot;</span>.implode(<span class="string">&#x27;,&#x27;</span>,$args).<span class="string">&quot;)不存在或者不可访问! &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//调用一个不可访问的方法</span></span><br><span class="line">$obj-&gt;showInfo(<span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-03-18.png" alt="Snipaste_2020-01-13_16-03-18"></p><p>（2）__callStatic()</p><p>✔描述:用静态方法中调用一个不可访问的方法时, __callStatic()会被调用</p><p>✔语法:public static mixed __callStatic(string $name,array $arguments)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//当使用静态化方式，调用一个不可访问的静态方法时</span></span><br><span class="line"><span class="comment">//__callStatic()会自动调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__callStatic</span>(<span class="params">$func,$args</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;静态方法<span class="subst">&#123;$func&#125;</span>(&quot;</span>.implode(<span class="string">&#x27;,&#x27;</span>,$args).<span class="string">&quot;)不存在或不可访问&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用静态化方式，访问一个静态方法</span></span><br><span class="line">Student::showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-10-10.png" alt="Snipaste_2020-01-13_16-10-10"></p><h2 id="静态延迟绑定"><a href="#静态延迟绑定" class="headerlink" title="静态延迟绑定"></a>静态延迟绑定</h2><h3 id="什么是静态延迟绑定"><a href="#什么是静态延迟绑定" class="headerlink" title="什么是静态延迟绑定"></a>什么是静态延迟绑定</h3><p>✔自 PHP 5.3.0 起，PHP 增加了一个叫做后期静态绑定的功能，用于在继承范围内引用静态调用的类。<br>“后期绑定”的意思是说，static::不再被解析为定义当前方法所在的类，而是在实际运行时计算的。也可以称之为”静态绑定”，因为它可以用于（但不限于）静态方法的调用。</p><p>✔语法：static::静态属性，静态方法，成员方法，类常量</p><h3 id="举例说明-13"><a href="#举例说明-13" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> TITLE = <span class="string">&quot;Title&quot;</span>;</span><br><span class="line"><span class="comment">//如果只有一个类，self和static都代表当前类</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;班级名称：&quot;</span>.<span class="built_in">self</span>::TITLE;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;班级名称: &quot;</span>.<span class="built_in">static</span>::TITLE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-15-07.png" alt="Snipaste_2020-01-13_16-15-07"></p><h2 id="类型约束"><a href="#类型约束" class="headerlink" title="类型约束"></a>类型约束</h2><h3 id="类型约束简介"><a href="#类型约束简介" class="headerlink" title="类型约束简介"></a>类型约束简介</h3><p>✔PHP 的类型约束有三种：数组约束、对象约束、接口约束。</p><h3 id="举例说明-14"><a href="#举例说明-14" class="headerlink" title="举例说明"></a>举例说明</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//函数或方法参数的类型限定</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params">$a,<span class="keyword">array</span> $b,Student $c,Inter2 $d</span>)</span>&#123;</span><br><span class="line"><span class="comment">//$a可以时任意类型</span></span><br><span class="line"><span class="comment">//$b只能时数组</span></span><br><span class="line"><span class="comment">//$c必须时Student类的实例</span></span><br><span class="line"><span class="comment">//$d必须时Inter2接口的实例</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Inter2</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Inter2</span></span>&#123;&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">$arr = <span class="keyword">array</span>();</span><br><span class="line">abc(<span class="number">100</span>,$arr,$obj,$obj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-19-39.png" alt="Snipaste_2020-01-13_16-19-39"></p><h2 id="常用的魔术常量"><a href="#常用的魔术常量" class="headerlink" title="常用的魔术常量"></a>常用的魔术常量</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">✔ <span class="keyword">__LINE__</span>，当前行号</span><br><span class="line">✔ <span class="keyword">__FILE__</span>，当前文件名</span><br><span class="line">✔ <span class="keyword">__DIR__</span>，当前目录名</span><br><span class="line">✔ <span class="keyword">__FUNCTION__</span>，当前函数名</span><br><span class="line">✔ <span class="keyword">__CLASS__</span>，当前类名</span><br><span class="line">✔ <span class="keyword">__METHOD__</span>，当前方法</span><br><span class="line">✔ <span class="keyword">__NAMESPACE__</span>，当前空间名(在 PDO 中讲)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义Student类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"><span class="comment">//创建当前类的对象</span></span><br><span class="line"><span class="comment">//!类名不能时常量，只能时变量</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$className = <span class="keyword">__CLASS__</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> $className;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;当前行号：&quot;</span>.<span class="keyword">__LINE__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前文件：&quot;</span>.<span class="keyword">__FILE__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前目录：&quot;</span>.<span class="keyword">__DIR__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前类名：&quot;</span>.<span class="keyword">__CLASS__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前函数名：&quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;当前方法名：&quot;</span>.<span class="keyword">__METHOD__</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建Student类对象</span></span><br><span class="line">$obj = Student::getInstance();</span><br><span class="line">$obj-&gt;showInfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-26-26.png" alt="Snipaste_2020-01-13_16-26-26"></p><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><h3 id="什么是序列化"><a href="#什么是序列化" class="headerlink" title="什么是序列化"></a>什么是序列化</h3><p>✔变量序列化: 将变量转成可储存或传输的字符串的过程，会保留类型和结构</p><p>✔变量反序化:将序列化的字符串，再还原成原始变量</p><p>✔除了资源变量外，其它变量都可以序列化</p><h3 id="serialize"><a href="#serialize" class="headerlink" title="serialize()"></a>serialize()</h3><p>✔描述:产生一个可储存的值的表示</p><p>✔语法：string serialize (mixed $value)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义数组变量</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_name&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="comment">//变量序列化</span></span><br><span class="line">$str = serialize($arr);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-35-24.png" alt="Snipaste_2020-01-13_16-35-24"></p><h3 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize()"></a>unserialize()</h3><p>✔描述：从已储存的表示中创建PHP的值</p><p>✔语法：mixed unserialize(string $str)</p><h3 id="对象序列化"><a href="#对象序列化" class="headerlink" title="对象序列化"></a>对象序列化</h3><p>✔对象的序列化过程,与其它变量数据一样</p><p>✔__sleep()魔术方法功能：此功能可以用于清理对象，并返回一个包含对象中所有应被序列化的变量名称的数组</p><p>✔对象序列化的内容只能包含成员属性，不能包含常量、静态属性、成员方法、静态方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终的数据库工具类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $db_host;</span><br><span class="line"><span class="keyword">private</span> $db_user;</span><br><span class="line"><span class="keyword">private</span> $db_pass;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> $config</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//连接Mysql服务器</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connectDb</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!@mysql_connect(<span class="keyword">$this</span>-&gt;db_host,<span class="keyword">$this</span>-&gt;db_user,<span class="keyword">$this</span>-&gt;db_pass))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;PHP 连接MySQL服务器失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在对象序列化前,自动调用的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//返回需要序列的对象属性，不需要不写</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&quot;db_host&quot;</span>,<span class="string">&quot;db_user&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建数据库类的对象</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;db_host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_user&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_pass&#x27;</span> =&gt; <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">);</span><br><span class="line">$db = <span class="keyword">new</span> Db($arr);</span><br><span class="line"><span class="comment">//对象序列化</span></span><br><span class="line">$str = serialize($db);</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_16-45-38.png" alt="Snipaste_2020-01-13_16-45-38"></p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">对象的反序列化过程，与其它变量数据一样；</span><br><span class="line">若反序列化的变量是一个对象，在成功地重新构造对象之后，PHP 会自动地试图去调用 __wakeup()成员函数（如果存在的话）。</span><br><span class="line">unserialize() 会检查是否存在一个 __wakeup()方法。如果存在，则会先调用 __wakeup 方法，预先准备对象需要的资源</span><br><span class="line">__wakeup() 经常用在反序列化操作中，进行一些初始化操作，例如重新建立数据库连接，或执行其它初始化操作。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义最终类的数据库工具类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $db_host;</span><br><span class="line"><span class="keyword">private</span> $db_user;</span><br><span class="line"><span class="keyword">private</span> $db_pass;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> $config</span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_host = $config[<span class="string">&#x27;db_host&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_user = $config[<span class="string">&#x27;db_user&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = $config[<span class="string">&#x27;db_pass&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//连接MySQL服务器</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connectDb</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!@mysql_connect(<span class="keyword">$this</span>-&gt;db_host,<span class="keyword">$this</span>-&gt;db_user,<span class="keyword">$this</span>-&gt;db_pass))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;PHP 连接MySQL服务器失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在对象序列化前，自动调用的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//返回需要序列化的对象属性，不需要不写</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&quot;db_host&quot;</span>,<span class="string">&quot;db_user&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在对象成功重构后， __wakeup()会自动调用</span></span><br><span class="line"><span class="comment">//对象初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db_pass = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;connectDb();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$str = file_get_contents(<span class="string">&quot;2.txt&quot;</span>);</span><br><span class="line">$db = unserialize($str);</span><br><span class="line">var_dump($db);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常用类和对象的操作函数"><a href="#常用类和对象的操作函数" class="headerlink" title="常用类和对象的操作函数"></a>常用类和对象的操作函数</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_17-03-36.png" alt="Snipaste_2020-01-13_17-03-36"></p><h3 id="判断类、接口、方法属性是否存在"><a href="#判断类、接口、方法属性是否存在" class="headerlink" title="判断类、接口、方法属性是否存在"></a>判断类、接口、方法属性是否存在</h3><p>✔class_exists()        判断类是否存在</p><p>✔interface_exists()    判断接口是否存在</p><p>✔method_exists()    判断方法是否存在</p><p>✔property_exists()    判断属性是否存在</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="string">&quot;Student&quot;</span>))&#123;</span><br><span class="line"><span class="comment">//如果类存在，则创建对象</span></span><br><span class="line">$obj = <span class="keyword">new</span> Student();</span><br><span class="line">var_dump($obj);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Student 类不存在&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_17-07-16.png" alt="Snipaste_2020-01-13_17-07-16"></p><h3 id="获取类名"><a href="#获取类名" class="headerlink" title="获取类名"></a>获取类名</h3><p>✔get_class()根据对象返回类名</p><p>✔get_parent_class()返回父类名称</p><p>检查一个变量是不是对象 is_object()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> ItStudent();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;类名为: &quot;</span>.get_class($obj);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;父类名为: &quot;</span>.get_parent_class($obj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/Snipaste_2020-01-13_17-13-05.png" alt="Snipaste_2020-01-13_17-13-05"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;类和对象的关系&quot;&gt;&lt;a href=&quot;#类和对象的关系&quot; class=&quot;headerlink&quot; title=&quot;类和对象的关系&quot;&gt;&lt;/a&gt;类和对象的关系&lt;/h2&gt;&lt;h3 id=&quot;类的概念&quot;&gt;&lt;a href=&quot;#类的概念&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="编程语言" scheme="https://ey404.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="PHP" scheme="https://ey404.github.io/tags/PHP/"/>
    
    <category term="面向对象" scheme="https://ey404.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础</title>
    <link href="https://ey404.github.io/2020/09/26/php%E5%9F%BA%E7%A1%80/"/>
    <id>https://ey404.github.io/2020/09/26/php%E5%9F%BA%E7%A1%80/</id>
    <published>2020-09-26T07:47:09.000Z</published>
    <updated>2020-10-28T02:34:41.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章-PHP基础语法"><a href="#第一章-PHP基础语法" class="headerlink" title="第一章 PHP基础语法"></a>第一章 PHP基础语法</h2><h3 id="1-1PHP标示符"><a href="#1-1PHP标示符" class="headerlink" title="1.1PHP标示符"></a>1.1PHP标示符</h3><h4 id="1-1-1标准标示符"><a href="#1-1-1标准标示符" class="headerlink" title="1.1.1标准标示符"></a>1.1.1标准标示符</h4><p><code>语法</code>: <?php code;?></p><p><code>说明</code>：PHP语言自己的标示符，推荐使用，如果当前PHP标示符里面只有PHP代码，结束的标示符(?&gt;)可以省略。</p><p><code>案例</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//这个就是标准的标识符，如果只有PHP代码，后门结束符号可以省略</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hello,world!&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="1-1-2短标签风格"><a href="#1-1-2短标签风格" class="headerlink" title="1.1.2短标签风格"></a>1.1.2短标签风格</h4><p><code>语法</code>: <? Code ;?></p><p><code>说明</code>:这种风格的方法是默认不开启的，需要在php.ini中开启次功能，所以不推荐使用。</p><p><code>案例:</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">short_open_tag</span> = <span class="literal">ON</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916143208816.png" alt="image-20200916143208816"></p><h4 id="1-1-3script风格"><a href="#1-1-3script风格" class="headerlink" title="1.1.3script风格"></a>1.1.3script风格</h4><p><code>语法</code>:<script language="php">code;</script></p><p><code>说明</code>：模仿jsp的风格</p><p><code>案例</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello world!;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-1-4asp风格"><a href="#1-1-4asp风格" class="headerlink" title="1.1.4asp风格"></a>1.1.4asp风格</h4><p><code>语法</code>:&lt;%code; %&gt;</p><p><code>说明</code>:这种风格的方法默认是不能使用的，需要php.ini中开启次功能</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">asp_tags</span> = <span class="literal">ON</span></span><br></pre></td></tr></table></figure><p><code>案例:</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916143645398.png" alt="image-20200916143645398"></p><h3 id="1-2PHP分割指令–分号"><a href="#1-2PHP分割指令–分号" class="headerlink" title="1.2PHP分割指令–分号"></a>1.2PHP分割指令–分号</h3><p><code>说明</code>：在PHP语言中语句分为两大类，一种是控制型语句，这种语句只是定义当前代码是如何运行的方式，如：流程控制语句、定义函数、定义类等，所以这种控制语句是不写分号结束的；另一种就是功能语句，如：变量声明、输出、调用函数、声明对象等，只要是功能语句必须使用分号结束。</p><p><code>案例：</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//分割指令</span></span><br><span class="line">    $a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hellow world!&#x27;</span></span><br><span class="line"><span class="comment">//如果是最后一行了可以不用号</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3PHP程序注释"><a href="#1-3PHP程序注释" class="headerlink" title="1.3PHP程序注释"></a>1.3PHP程序注释</h3><p><code>说明：</code>注释是可以对当前文件或者当前某些代码进行说明的方式，也可以在调试代码时使用，把某些代码直接注释掉而不是删除。</p><p>注释分为两类：单行注释和多行注释</p><p><code>单行注释</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双左斜杠注释</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hellow world&#x27;</span>;</span><br><span class="line"><span class="comment"># 单行注释</span></span><br><span class="line"><span class="comment"># 单行注释</span></span><br><span class="line"><span class="comment"># 单行注释</span></span><br></pre></td></tr></table></figure><p><code>多行注释</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这里是多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="1-4html和php的混合模式"><a href="#1-4html和php的混合模式" class="headerlink" title="1.4html和php的混合模式"></a>1.4html和php的混合模式</h3><p><code>说明</code>：php的代码是不能写入到HTML中的，需要用PHP的标示符隔开，PHP代码只能在PHP文件中执行，不能写到其他语言文件中，html代码可以写到PHP文件中，直接写入到PHP文件中的方式不再推荐使用，可以使用引入的方式把html文件引入php文件中来执行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">?php</span></span></span><br><span class="line"><span class="tag">$<span class="attr">title</span> = <span class="string">&#x27;This is Title&#x27;</span>;</span></span><br><span class="line"><span class="tag">?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hmtl</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">?php</span> <span class="attr">echo</span> $<span class="attr">title</span>;?&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="第二章-PHP变量"><a href="#第二章-PHP变量" class="headerlink" title="第二章 PHP变量"></a>第二章 PHP变量</h2><h3 id="2-1变量的介绍"><a href="#2-1变量的介绍" class="headerlink" title="2.1变量的介绍"></a>2.1变量的介绍</h3><p><code>说明</code>：可以存储变化的量（数据）的空间，可以变化的量是通过上下文来绝定，所以称为“弱类型语言”。</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916144620130.png" alt="image-20200916144620130"></p><h3 id="2-2变量的声明"><a href="#2-2变量的声明" class="headerlink" title="2.2变量的声明"></a>2.2变量的声明</h3><p><code>说明</code>：变量的声明是有“$”来进行定义的声明的，在内存需要定义变量并赋值。</p><p><code>语法</code>：$变量名 = 量;</p><p><code>注意</code>：变量名是数字(0-9)、字母(a-zA-Z)、下划线组成的且不能以数字开头的定义方式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//变量的声明</span></span><br><span class="line">$name = <span class="string">&quot;Y&quot;</span>;</span><br><span class="line">$age = <span class="number">3</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3可变变量"><a href="#2-3可变变量" class="headerlink" title="2.3可变变量"></a>2.3可变变量</h3><p><code>说明</code>：可以把某个变量的追当成另一个变量的名来使用，这个时候的好处是减少变量的定义，节省内存空间。</p><p><code>案例</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//可变变量</span></span><br><span class="line">$name = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">$$name = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="comment">//$name 的值hello，在它的前面在加$s返回，就会找$name里值当成变量名</span></span><br><span class="line">$$$name = <span class="string">&#x27;你好！&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $hello;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $name.$&#123;$name&#125;.$&#123;$&#123;$name&#125;&#125;;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4变量的传值方式"><a href="#2-4变量的传值方式" class="headerlink" title="2.4变量的传值方式"></a>2.4变量的传值方式</h3><h4 id="2-4-1值传递"><a href="#2-4-1值传递" class="headerlink" title="2.4.1值传递"></a>2.4.1值传递</h4><p><code>说明</code>：把一个变量的值“复制”一份，然后在赋值给另一个变量，这个时候的两个变量是没有任何关系的。</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916145549121.png" alt="image-20200916145549121"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line">$name = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">$a = $name;</span><br><span class="line"><span class="keyword">echo</span> $name,$a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$name = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $name,$a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916145811922.png" alt="image-20200916145811922"></p><h4 id="2-4-2引用传递"><a href="#2-4-2引用传递" class="headerlink" title="2.4.2引用传递"></a>2.4.2引用传递</h4><p><code>说明</code>:说明：把一个变量的值的空间地址给另一个变量，这个时候的两个变量公用一个数据空间，指向同一个地址，这个的两个变量值有关系的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//引用传递</span></span><br><span class="line">$age = <span class="number">18</span>;</span><br><span class="line">$zsage = &amp;$age;</span><br><span class="line"><span class="keyword">echo</span> $age,$zsage;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">echo</span> $age,$zsage;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">unset</span>($age);</span><br><span class="line"><span class="keyword">echo</span> $age,$zsage;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916150112226.png" alt="image-20200916150112226"></p><h3 id="2-5变量的范围"><a href="#2-5变量的范围" class="headerlink" title="2.5变量的范围"></a>2.5变量的范围</h3><p><code>说明</code>：在PHP中变量分为三种访问的方式（范围），局部变量、全局变量、静态变量</p><h4 id="2-5-1全局变量"><a href="#2-5-1全局变量" class="headerlink" title="2.5.1全局变量"></a>2.5.1全局变量</h4><p><code>说明</code>：在函数外定义的变量的就称为“全局变量”，正常情况只能在函数外使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line">$name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="comment">//全局变量，不能在函数内部使用，原因是存储位置不一样</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">user</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $name; <span class="comment">//不能使用全局变量</span></span><br><span class="line">&#125;</span><br><span class="line">user();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-5-2局部变量"><a href="#2-5-2局部变量" class="headerlink" title="2.5.2局部变量"></a>2.5.2局部变量</h4><p><code>说明</code>:在函数内定义的变量就称为“局部变量”，正常情况只能在函数内部使用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//局部变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">user</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//echo $name;//不能使用全局变量</span></span><br><span class="line">$name2 = <span class="string">&#x27;admin&#x27;</span>;<span class="comment">//局部变量不能再外部使用</span></span><br><span class="line"><span class="keyword">echo</span> $name2;</span><br><span class="line">&#125;</span><br><span class="line">user();</span><br><span class="line"><span class="keyword">echo</span> $name2;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-5-3静态变量"><a href="#2-5-3静态变量" class="headerlink" title="2.5.3静态变量"></a>2.5.3静态变量</h4><p><code>说明</code>：正常情况下变量是在运行完当前页面后进行销毁的（PHP自己的特性），如果不想销毁可以使用静态变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//静态变量</span></span><br><span class="line">$age = <span class="number">18</span>;</span><br><span class="line">$age++;</span><br><span class="line"><span class="keyword">echo</span> $age.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">age1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">static</span> $age = <span class="number">18</span>;<span class="comment">//static就是静态变量的声明方式，静态变量声明后运行完当前也页面不再销毁这个变量，而是保留。</span></span><br><span class="line"><span class="keyword">echo</span> $age.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">$age++;</span><br><span class="line">&#125;</span><br><span class="line">age1(); <span class="comment">//18</span></span><br><span class="line">age1(); <span class="comment">//19</span></span><br><span class="line">age1(); <span class="comment">//20</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-5-4全局转局部或局部转全局"><a href="#2-5-4全局转局部或局部转全局" class="headerlink" title="2.5.4全局转局部或局部转全局"></a>2.5.4全局转局部或局部转全局</h4><p><code>说明</code>：局部变量可以在函数内声明为全局变量，这个时候局部就可以在函数外使用，声明方式：$GLOBALS和global</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//局部转全局</span></span><br><span class="line"><span class="comment">//global $sex; 这种方式不行</span></span><br><span class="line"><span class="comment">//global $sex = &#x27;boy&#x27;; 这种方式不行</span></span><br><span class="line">$sex = <span class="string">&#x27;boy&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">admin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">global</span> $name,$sex;</span><br><span class="line">$name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $sex;</span><br><span class="line">&#125;</span><br><span class="line">admin();</span><br><span class="line"><span class="keyword">echo</span> $name;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-6变量常用的5个函数"><a href="#2-6变量常用的5个函数" class="headerlink" title="2.6变量常用的5个函数"></a>2.6变量常用的5个函数</h3><p><code>isset()</code>：判断变量是否存在</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916161726228.png" alt="image-20200916161726228"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//isset(); 检测变量是否存在</span></span><br><span class="line">$name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">$res = <span class="keyword">isset</span>($name,$age);</span><br><span class="line">var_dump($res);</span><br><span class="line"><span class="comment">//目的是防止用户访问当前页面，如果访问会查不到username下标，结果会报错</span></span><br><span class="line">$userName = <span class="keyword">isset</span>($_GET[<span class="string">&#x27;username&#x27;</span>]) ? $_GET[<span class="string">&#x27;username&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($name,$age))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;存在&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;不存在&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Unset</code>()：删除或销毁变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="keyword">unset</span>($name); <span class="comment">//unset 不止可以删除变量，还可以删除数组中的某个元素</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($name))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;存在!&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不存在&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Empty()</code>；判断变量是否为空</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916165011283.png" alt="image-20200916165011283"></p><p><code>Echo</code>：输出打印值，不能输出复合和特殊的数据类型的值</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916170000023.png" alt="image-20200916170000023"></p><p><code>Var_dump</code>()：输出打印值、类型、长度，打印复合或特殊类型的值</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916170108836.png" alt="image-20200916170108836"></p><h2 id="第三章-预定义变量"><a href="#第三章-预定义变量" class="headerlink" title="第三章 预定义变量"></a>第三章 预定义变量</h2><p><code>说明</code>：就是PHP系统内置的提供给使用的变量，这个变量一般都是超全局变量，超全局的说明就是没有作用域的限制有的还可以跨页面。</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916170213397.png" alt="image-20200916170213397"></p><h3 id="3-1-GLOBALS"><a href="#3-1-GLOBALS" class="headerlink" title="3.1$GLOBALS"></a>3.1$GLOBALS</h3><p><code>说明</code>：globals是PHP内置的可以自动获取当前页面中的所有变量的内容。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">$name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">$age = <span class="number">18</span>;</span><br><span class="line">$sex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">var_dump($GLOBALS);</span><br><span class="line"><span class="keyword">echo</span> $GLOBALS[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916170903591.png" alt="image-20200916170903591"></p><h3 id="3-2-SERVER"><a href="#3-2-SERVER" class="headerlink" title="3.2$_SERVER"></a>3.2$_SERVER</h3><p><code>说明</code>：server会自动获取服务器和客户端的信息</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916170939511.png" alt="image-20200916170939511"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;table border=1&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($_SERVER <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.$key.<span class="string">&#x27;&lt;/td&gt;&lt;td&gt;&#x27;</span>.$value.<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-FILES"><a href="#3-3-FILES" class="headerlink" title="3.3$_FILES"></a>3.3$_FILES</h3><p><code>说明</code>：获取上传文件的信息</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916172048400.png" alt="image-20200916172048400"></p><p>Name：图片的名称</p><p>Type：图片的类型</p><p>Tmp_name：文件的临时文件夹和临时名称</p><p>Error：错误信息</p><p>Size：文件的大小</p><h3 id="3-4-GET：URL方式传递数据"><a href="#3-4-GET：URL方式传递数据" class="headerlink" title="3.4$_GET：URL方式传递数据"></a>3.4$_GET：URL方式传递数据</h3><p><code>说明</code>：其实就是浏览器的地址栏传递方式，</p><p><code>传递方式</code>：URL地址?参数1=值1&amp;参数2=值2……………………………</p><p><code>传递形式</code>：表单的get方式和超链接方式</p><h3 id="3-5-POST-HTTP-POST方式传递数据"><a href="#3-5-POST-HTTP-POST方式传递数据" class="headerlink" title="3.5$_POST: HTTP POST方式传递数据"></a>3.5$_POST: HTTP POST方式传递数据</h3><h3 id="3-6-REQUEST"><a href="#3-6-REQUEST" class="headerlink" title="3.6$_REQUEST"></a>3.6$_REQUEST</h3><h2 id="第四章-常量"><a href="#第四章-常量" class="headerlink" title="第四章 常量"></a>第四章 常量</h2><p><code>说明</code>：常量一旦定义，里面的值和常量是不能改变和销毁的，而且常量名不能重复。</p><h3 id="4-1常量的定义"><a href="#4-1常量的定义" class="headerlink" title="4.1常量的定义"></a>4.1常量的定义</h3><p><code>语法</code>：define(常量名,常量值); 不能定义复合数据</p><p><code>5.xPHP版本</code>：const来定义复合的数据，如：数组</p><p><code>7.0PHP版本</code>：define可以定义复合的数据，如：数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//常量的定义</span></span><br><span class="line">define(<span class="string">&#x27;NAME&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;PI&#x27;</span>,<span class="number">3.14</span>);</span><br><span class="line"><span class="comment">//const定义方式</span></span><br><span class="line"><span class="comment">//const ARR = array(1,2,3,4);</span></span><br><span class="line"><span class="keyword">const</span> STR = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2访问常量"><a href="#4-2访问常量" class="headerlink" title="4.2访问常量"></a>4.2访问常量</h3><p><code>说明</code>：直接使用常量名就可以了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&#x27;NAME&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> NAME;</span><br><span class="line">define(<span class="string">&#x27;PI&#x27;</span>,<span class="number">3.14</span>);</span><br><span class="line"><span class="keyword">echo</span> PI;</span><br><span class="line"><span class="comment">//const定义方式</span></span><br><span class="line"><span class="keyword">const</span> STR = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">var_dump(STR);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916194617870.png" alt="image-20200916194617870"></p><h3 id="4-3魔术常量–预定义常量"><a href="#4-3魔术常量–预定义常量" class="headerlink" title="4.3魔术常量–预定义常量"></a>4.3魔术常量–预定义常量</h3><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916194636398.png" alt="image-20200916194636398"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//__CLASS__: 获取当前类名</span></span><br><span class="line"><span class="comment">//文件名：getUserClass.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">getUser</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./index.html&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./index.html&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>产生随机数的函数</code>：rand()</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200916195358777.png" alt="image-20200916195358777"></p><h2 id="第五章数据类型"><a href="#第五章数据类型" class="headerlink" title="第五章数据类型"></a>第五章数据类型</h2><p><code>说明</code>：就是PHP能存储数据格式，PHP提供8种数据类型</p><p><code>标量类型</code>：int float string boolean</p><p><code>复合类型</code>：array object</p><p><code>特殊</code>：null resource</p><h3 id="5-1字符串类型-string"><a href="#5-1字符串类型-string" class="headerlink" title="5.1字符串类型-string"></a>5.1字符串类型-string</h3><p><code>说明</code>：字符串类型就是把任何的数据加上引号（单引号和双引号）就是字符串了。</p><p><code>如</code>：$name = ‘admin’;  $name = “admin”;</p><h4 id="5-1-1单引号"><a href="#5-1-1单引号" class="headerlink" title="5.1.1单引号"></a>5.1.1单引号</h4><h4 id="5-1-2双引号"><a href="#5-1-2双引号" class="headerlink" title="5.1.2双引号"></a>5.1.2双引号</h4><h4 id="5-1-3单引号和双引号的区别"><a href="#5-1-3单引号和双引号的区别" class="headerlink" title="5.1.3单引号和双引号的区别"></a>5.1.3单引号和双引号的区别</h4><p><code>1</code>.双引号可以解析变量，如：$name=”$admin”;  </p><p><code>2</code>.单引号不能解析变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//单引号和双引号的区别</span></span><br><span class="line">$name = <span class="string">&quot;h&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;用户名为:<span class="subst">&#123;$name&#125;</span>&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;用户名为:&#123;$name&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917153846319.png" alt="image-20200917153846319"></p><p><code>3</code>.转义字符的多少，双引号转义的字符多，单引号只有两个（‘, \）</p><p><code>双引号转义字符</code>：</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917153953229.png" alt="image-20200917153953229"></p><p><code>单引号</code>的转义字符：只有<code>‘</code>本身和<code>\\</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//转义字符：\,目的就是让一些特殊字符失去在php中本身意义</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;用户名\为:\&quot;<span class="subst">&#123;$name&#125;</span>\&quot; \n价格为： \$j&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;用户名为:\\\&#x27;&#123;$name&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-1-4Heredoc"><a href="#5-1-4Heredoc" class="headerlink" title="5.1.4Heredoc"></a>5.1.4Heredoc</h4><p><code>说明</code>：双引号的定界符写法</p><h4 id="5-1-5Nowdoc"><a href="#5-1-5Nowdoc" class="headerlink" title="5.1.5Nowdoc"></a>5.1.5Nowdoc</h4><p><code>说明</code>：单引号的定界符写法</p><h3 id="5-2字符串的常用函数"><a href="#5-2字符串的常用函数" class="headerlink" title="5.2字符串的常用函数"></a>5.2字符串的常用函数</h3><h4 id="5-2-1字符串分解和合并"><a href="#5-2-1字符串分解和合并" class="headerlink" title="5.2.1字符串分解和合并"></a>5.2.1字符串分解和合并</h4><p><code>说明</code>：在PHP中提供了两个函数可以对字符串进行“拆分”和“组合-数组”,作用是如多选框有多少个值</p><p><code>Explode</code>：把字符串通过一个分割字符进行分割成数组</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917154640410.png" alt="image-20200917154640410"></p><p><code>Implode</code>：把一维数组转换成字符串</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155059541.png" alt="5.2.2去除字符串的空格"></p><h4 id="5-2-2去除字符串的空格"><a href="#5-2-2去除字符串的空格" class="headerlink" title="5.2.2去除字符串的空格"></a>5.2.2去除字符串的空格</h4><p><code>ltrim()</code>：去除字符串左边的空白字符</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155231119.png" alt="image-20200917155231119"></p><p><code>rtrim()</code>：去除字符串右边的空白字符</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155313630.png" alt="image-20200917155313630"></p><p><code>trim()</code>：去除字符串两边的空白字符</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155404156.png" alt="image-20200917155404156"></p><h4 id="5-2-3字符串替换"><a href="#5-2-3字符串替换" class="headerlink" title="5.2.3字符串替换"></a>5.2.3字符串替换</h4><p> <code>substr_replace</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155553458.png" alt="image-20200917155553458"></p><h4 id="5-2-4子字符串查找替换"><a href="#5-2-4子字符串查找替换" class="headerlink" title="5.2.4子字符串查找替换"></a>5.2.4子字符串查找替换</h4><p><code>str_replace</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155705314.png" alt="image-20200917155705314"></p><h4 id="5-2-5字符串截取"><a href="#5-2-5字符串截取" class="headerlink" title="5.2.5字符串截取"></a>5.2.5字符串截取</h4><p><code>substr</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917155802767.png" alt="image-20200917155802767"></p><h3 id="5-3整数型–int"><a href="#5-3整数型–int" class="headerlink" title="5.3整数型–int"></a>5.3整数型–int</h3><p><code>说明</code>：是负数和0和整数的集合，在PHP中存储整数为10进制、八进制、十六进制</p><p><code>语法</code>：$var = 整数数字;</p><p><code>八进制的写法</code>：在数字之前加0，就是八进制，数字是有0-7</p><p><code>十六位进制的写法</code>：在数字前面加0x，数字为：0-f 0123456789abcdef</p><p><code>十进制的写法</code>：直接写数字就型，数字为：0123456789</p><p><code>二进制</code>：只有0和1  一共32位  0000 0000 0000 0000 0000 0000 0000 0000=&gt;0</p><p><code>PHP最大的存储数值为</code>：21亿，PHP_INT_MAX</p><p><code>PHP最大的位数为</code>：14位,一个数值占多少位置：PHP_INT_SIZE</p><h3 id="5-4浮点型–float"><a href="#5-4浮点型–float" class="headerlink" title="5.4浮点型–float"></a>5.4浮点型–float</h3><p><code>说明</code>：小数,浮点型（也叫浮点数 float，双精度数 double 或实数 real）</p><p>PHP中的小数有两种表现形式：普通的小数和科学计数法</p><h3 id="5-5布尔类型–boolean"><a href="#5-5布尔类型–boolean" class="headerlink" title="5.5布尔类型–boolean"></a>5.5布尔类型–boolean</h3><p><code>说明</code>：在PHP中布尔型的数据只有两个值：true和false</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//布尔型</span></span><br><span class="line">$bool = <span class="literal">true</span>;</span><br><span class="line">$bool = <span class="literal">false</span>;</span><br><span class="line">var_dump($bool);</span><br></pre></td></tr></table></figure><h3 id="5-6数组–array"><a href="#5-6数组–array" class="headerlink" title="5.6数组–array"></a>5.6数组–array</h3><p><code>说明</code>：一组数据的集合，就是数组</p><p><code>$变量</code> = array(元素，元素，元素…….);</p><h3 id="5-7对象–object"><a href="#5-7对象–object" class="headerlink" title="5.7对象–object"></a>5.7对象–object</h3><p><code>说明</code>：世间万物皆为“对象”;</p><h3 id="5-8空–null"><a href="#5-8空–null" class="headerlink" title="5.8空–null"></a>5.8空–null</h3><p><code>说明</code>：特殊的 NULL 值表示一个变量没有值。NULL 类型唯一可能的值就是 NULL。</p><h3 id="5-9资源–resource"><a href="#5-9资源–resource" class="headerlink" title="5.9资源–resource"></a>5.9资源–resource</h3><p><code>说明</code>：就是引用PHP外部的内容，这个时候的类型的就是资源。资源是通过专门的函数来建立和使用的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$link = mysql_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">$var_dump($link);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h3 id="5-10手册中的类型–用于说明需要某种类型的数据"><a href="#5-10手册中的类型–用于说明需要某种类型的数据" class="headerlink" title="5.10手册中的类型–用于说明需要某种类型的数据"></a>5.10手册中的类型–用于说明需要某种类型的数据</h3><p><code>说明</code>：在PHP中数据类型是可以进制互相转换，如：整型1转换成字符串1</p><p><code>在PHP中分两种转换形式</code>：自动转换和强制转换</p><h3 id="5-11数据类型的转换"><a href="#5-11数据类型的转换" class="headerlink" title="5.11数据类型的转换"></a>5.11数据类型的转换</h3><p>给到特定的写法就会改变原来的类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$num1 = <span class="number">1</span>;</span><br><span class="line">$num2 = <span class="number">2</span>;</span><br><span class="line">$num3 = $num1 . $num2;</span><br><span class="line">var_dump($num3);</span><br><span class="line"><span class="keyword">if</span>($num1)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hello&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-11-2强制转换"><a href="#5-11-2强制转换" class="headerlink" title="5.11.2强制转换"></a>5.11.2强制转换</h4><p>可以使用一些特殊的方式来强制性改变类型</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917160635594.png" alt="image-20200917160635594"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//强制转换</span></span><br><span class="line">$num = <span class="number">1</span>;</span><br><span class="line">var_dump((<span class="keyword">string</span>)$num);</span><br><span class="line">$str = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">var_dump((<span class="keyword">float</span>)$str);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="第六章-运算符"><a href="#第六章-运算符" class="headerlink" title="第六章 运算符"></a>第六章 运算符</h2><p><code>说明</code>：对操作数进行运算的符号，就是运算符。</p><p><code>表达式</code>：表达式是 PHP 最重要的基石。在 PHP 中，几乎所写的任何东西都是一个表达式。简单但却最精确的定义一个表达式的方式就是”任何有值的东西”。 如：$a = 5; $a = 5 + 3;</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917160914195.png" alt="image-20200917160914195"></p><h3 id="6-1算数运算符"><a href="#6-1算数运算符" class="headerlink" title="6.1算数运算符"></a>6.1算数运算符</h3><p><code>说明</code>：是+ - * / %</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917160942096.png" alt="image-20200917160942096"></p><h3 id="6-2赋值运算符–"><a href="#6-2赋值运算符–" class="headerlink" title="6.2赋值运算符–="></a>6.2赋值运算符–=</h3><p><code>说明</code>：就是给变量赋值的作用。</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917161026708.png" alt="image-20200917161026708"></p><h3 id="6-3比较运算符"><a href="#6-3比较运算符" class="headerlink" title="6.3比较运算符"></a>6.3比较运算符</h3><p><code>说明</code>：对操作数进行比较，&lt; &lt;= &gt; &gt;= == != === !== ，比较运算符的结果是有真(true)和假(false)</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917161104653.png" alt="image-20200917161104653"></p><h3 id="6-4错误抑制符"><a href="#6-4错误抑制符" class="headerlink" title="6.4错误抑制符"></a>6.4错误抑制符</h3><p><code>说明</code>：@，目的屏蔽一些不重要错误。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//错误抑制符</span></span><br><span class="line">$a;</span><br><span class="line"><span class="keyword">echo</span> @$a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-5执行运算符"><a href="#6-5执行运算符" class="headerlink" title="6.5执行运算符"></a>6.5执行运算符</h3><p><code>说明</code>：``，把数据用反引号括起来后，就是执行了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$output = `ls -al`;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">$output</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-6递增递减运算符"><a href="#6-6递增递减运算符" class="headerlink" title="6.6递增递减运算符"></a>6.6递增递减运算符</h3><p><code>说明</code>：自己加一或自己减一，符号：++ –</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917161435040.png" alt="image-20200917161435040"></p><h3 id="6-7逻辑运算符"><a href="#6-7逻辑运算符" class="headerlink" title="6.7逻辑运算符"></a>6.7逻辑运算符</h3><p><code>说明</code>：逻辑运算符也叫“短路运算符”, 认为写的只判断一边如果达成条件直接结束给结果</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917161621372.png" alt="image-20200917161621372"></p><h4 id="6-7-1逻辑或："><a href="#6-7-1逻辑或：" class="headerlink" title="6.7.1逻辑或：||"></a>6.7.1逻辑或：||</h4><p>当两边的操作数其中一边为真，结果就是真。</p><p>当两边的操作数都为假时，结果就是假。</p><p>当前左边的操作数为假时，才去右边判断操作数，如果为真，结果为真，如果为假，结果为假</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> ($a &lt; $b || $a == $b)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-7-2逻辑与：-amp-amp"><a href="#6-7-2逻辑与：-amp-amp" class="headerlink" title="6.7.2逻辑与：&amp;&amp;"></a>6.7.2逻辑与：&amp;&amp;</h4><p>当两边的操作数其中一边为假时，结果就是假</p><p>当两边的操作数都为真时，结果就是真</p><p>当左边的操作数为真时，会去判断右边的操作，如果为真，结果为真，如果为假，结果为假。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//逻辑与</span></span><br><span class="line"><span class="keyword">if</span>($a == $b &amp;&amp; $a &lt; <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-7-3逻辑非："><a href="#6-7-3逻辑非：" class="headerlink" title="6.7.3逻辑非：!"></a>6.7.3逻辑非：!</h4><p><code>说明</code>：取反，非真即假，非假即真</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//逻辑非</span></span><br><span class="line"><span class="keyword">if</span>(!($a &gt; $b))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-8字符串连接符"><a href="#6-8字符串连接符" class="headerlink" title="6.8字符串连接符"></a>6.8字符串连接符</h3><p><code>说明</code>：通过(.)或(.=)进行字符串的拼接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//字符串连接</span></span><br><span class="line">$name = <span class="string">&#x27;h&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hello &#x27;</span>. $name;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-9位运算符"><a href="#6-9位运算符" class="headerlink" title="6.9位运算符"></a>6.9位运算符</h3><h4 id="6-9-1位运算符的说明"><a href="#6-9-1位运算符的说明" class="headerlink" title="6.9.1位运算符的说明"></a>6.9.1位运算符的说明</h4><p><code>说明</code>：作为了解的东西，就是对位进行操作，位说的是二进制的每个“位”，二进制共有32位。</p><h4 id="6-9-2二进制"><a href="#6-9-2二进制" class="headerlink" title="6.9.2二进制"></a>6.9.2二进制</h4><p><code>说明</code>：二进制由0和1构成的一个32位的数字，逢二进一；</p><h4 id="6-9-3十进制和二进制的转换"><a href="#6-9-3十进制和二进制的转换" class="headerlink" title="6.9.3十进制和二进制的转换"></a>6.9.3十进制和二进制的转换</h4><h3 id="6-10数组运算符"><a href="#6-10数组运算符" class="headerlink" title="6.10数组运算符"></a>6.10数组运算符</h3><p><code>说明</code>：就是对数组进行操作的方式</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917162430695.png" alt="image-20200917162430695"></p><p>其实就<code>三种</code>：联合（+）、等于（==，===）、不等于（!=,!==）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="number">5</span>=&gt;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>=&gt;<span class="number">9</span>);</span><br><span class="line">var_dump($arr1+$arr2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>($arr1 == $arr2)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;相等&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-11运算符优先级"><a href="#6-11运算符优先级" class="headerlink" title="6.11运算符优先级"></a>6.11运算符优先级</h3><p><code>说明</code>：括号优先，赋值最后</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917162931299.png" alt="image-20200917162931299"></p><h2 id="第七章-流程控制"><a href="#第七章-流程控制" class="headerlink" title="第七章 流程控制"></a>第七章 流程控制</h2><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917162959562.png" alt="image-20200917162959562"></p><p>在流程控制中分两类：<code>分支结构</code>、<code>循环结构</code></p><h3 id="7-1分支结构—if语句"><a href="#7-1分支结构—if语句" class="headerlink" title="7.1分支结构—if语句"></a>7.1分支结构—if语句</h3><p><code>语法</code>：</p><p>If(条件表达式){</p><p>达成条件运行的代码；</p><p>}</p><p><code>案例</code>：做一个1-10的随机数，如果再5以内输出。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//if语句</span></span><br><span class="line"><span class="comment">//案例：做一个1-10的随机数，如果再5以内输出</span></span><br><span class="line">$num = rand(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>($num &lt;= <span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2分支结构—ifelse语句"><a href="#7-2分支结构—ifelse语句" class="headerlink" title="7.2分支结构—ifelse语句"></a>7.2分支结构—ifelse语句</h3><p><code>语法</code>：</p><p>If(条件表达式){</p><p>​    达成条件运行的代码；</p><p>}else{</p><p>​    没有达成条件运行的代码；</p><p>}</p><p><code>案例</code>：如果在5以内输入小，5以上大</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//ifelse语句</span></span><br><span class="line"><span class="comment">//案例：如果5以内输入小，五以上大</span></span><br><span class="line"></span><br><span class="line">$num = rand(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>($num &lt;= <span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;small&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;big&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-3分支结构—ifelseif"><a href="#7-3分支结构—ifelseif" class="headerlink" title="7.3分支结构—ifelseif"></a>7.3分支结构—ifelseif</h3><p><code>语法</code>：</p><p>If(条件表达式1){</p><p>达成条件1运行的代码；</p><p>}elseif(条件表达式2){</p><p>达成条件2运行的代码；</p><p>}elseif(条件表达式n){</p><p>达成条件n运行的代码；</p><p>}[else{</p><p>以上都没有没达成运行的代码；</p><p>}]</p><p><code>案例</code>：狗和猫，通过随机数来获取数量，如果狗大于猫，一嘴猫毛，如果狗小于猫，一嘴狗粮，如果相对，就是猫狗大战</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//ifelseif</span></span><br><span class="line">$dog = rand(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">$cat = rand(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>($dog &gt; $cat)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;一嘴猫毛&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span>($dog &lt; $cat )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;一嘴狗粮&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;猫狗大战&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-4分支结构—switch语句"><a href="#7-4分支结构—switch语句" class="headerlink" title="7.4分支结构—switch语句"></a>7.4分支结构—switch语句</h3><p><code>语法</code>：</p><p>Switch(表达式){</p><p>​    Case 条件1:</p><p>​    达成条件1运行的语句;</p><p>​    Break;</p><p>Case 条件2:</p><p>​    达成条件2运行的代码;</p><p>​    Break;</p><p>​    Case 条件n:</p><p>达成条件n运行的代码；</p><p>​    Break;</p><p>​    Default :</p><p>​    都没有达成运行的代码；</p><p>}</p><p><code>案例</code>：判断星期几，取模给1234567</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$fen = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">switch</span>($fen)&#123;</span><br><span class="line"><span class="keyword">case</span> $fen &gt; <span class="number">60</span> &amp;&amp; $fen &lt; <span class="number">80</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> $fen &gt;= <span class="number">80</span> &amp;&amp; $fen &lt; <span class="number">90</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;良好&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> $fen &gt;= <span class="number">90</span> &amp;&amp; $fen &lt;= <span class="number">100</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;优秀&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-5分支结构的替代语法"><a href="#7-5分支结构的替代语法" class="headerlink" title="7.5分支结构的替代语法"></a>7.5分支结构的替代语法</h3><p>If的替代语法：</p><p>​    If(条件表达式):</p><p>​        运行的代码;</p><p>​        endif;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($num &lt;= <span class="number">5</span>):</span><br><span class="line"><span class="keyword">echo</span> $num;</span><br><span class="line"><span class="keyword">endif</span>;</span><br></pre></td></tr></table></figure><p>Ifelse 、Ifelseif、Switch</p><h3 id="7-6循环结构—while循环"><a href="#7-6循环结构—while循环" class="headerlink" title="7.6循环结构—while循环"></a>7.6循环结构—while循环</h3><p><code>语法</code>：</p><p>​    变量初始化;</p><p>​    While(条件表达式){</p><p>​        达成条件运行的循环体;</p><p>​        变量的变化;</p><p>}</p><p><code>说明</code>：</p><p>​    变量的初始化：这个初始化的值可以是随意一个数字</p><p>​    条件表达式：只有条件为true就会一直重复循环内容的代码；</p><p>​    变量的变化：既然有条件才执行，这个时候需要一个什么时候退出的条件</p><p><code>案例</code>：输出10-90；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//输出10-99</span></span><br><span class="line">$i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>($i&lt;=<span class="number">90</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $i.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-7循环结构—do-while循环"><a href="#7-7循环结构—do-while循环" class="headerlink" title="7.7循环结构—do..while循环"></a>7.7循环结构—do..while循环</h3><p><code>语法</code>：</p><p>​    <code>变量的初始化</code>；</p><p>​    Do{</p><p>​        达成条件运行的代码;</p><p>​        变量的变化;</p><p>}while(条件表达式)</p><p><code>注意</code>：dowhile循环不管条件是否达成，都会运行一次循环中的代码;</p><p><code>案例</code>：输出1-100</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//dowhile循环</span></span><br><span class="line">$i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $i;</span><br><span class="line">$i++;</span><br><span class="line">&#125;<span class="keyword">while</span>($i&gt;<span class="number">10</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-8循环结构—for循环"><a href="#7-8循环结构—for循环" class="headerlink" title="7.8循环结构—for循环"></a>7.8循环结构—for循环</h3><p><code>语法</code>：</p><p>​    For(变量初始化;条件表达式;变量的变化){</p><p>​    循环体;</p><p>}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//for循环</span></span><br><span class="line"><span class="comment">//输出1-99</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=<span class="number">99</span>;$i++)&#123;</span><br><span class="line"><span class="keyword">echo</span> $i.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意</code>：变量初始化可以是多个，用逗号隔开。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>,$j=<span class="number">9</span>;$i&lt;=$j;$i++)&#123;</span><br><span class="line"><span class="keyword">echo</span> $i.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>图解</code>：</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917171306135.png" alt="image-20200917171306135"></p><p><code>案例</code></p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917171523107.png" alt="image-20200917171523107"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>($i&lt;=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">$j=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>($j&lt;=<span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">$j++;</span><br><span class="line">&#125;</span><br><span class="line">$i++;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-9Break"><a href="#7-9Break" class="headerlink" title="7.9Break"></a>7.9Break</h3><p><code>说明</code>：break的作用是退出（跳出）for、while、dowhile、switch语句</p><p><code>案例</code>：输出1-100，在50的时候退出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//输出1-100，在50的时候</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=<span class="number">100</span>;$i++)&#123;</span><br><span class="line"><span class="keyword">echo</span> $i . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>($i==<span class="number">50</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>list</code>() : 获取数组中的元素的值，存储到list中的变量里，每个值必须配一个变量</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917193729829.png" alt="image-20200917193729829"></p><p><code>each()</code>：获取数组中的键值对，并将指针下移。</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200917193836091.png" alt="image-20200917193836091"></p><h3 id="7-10Continue"><a href="#7-10Continue" class="headerlink" title="7.10Continue"></a>7.10Continue</h3><p><code>说明</code>：跳过某次循环</p><p><code>案例</code>：输出1-50，然后在第25次时跳过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//输出1-50，然后在25次跳过</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i&lt;=<span class="number">50</span>;$i++)&#123;</span><br><span class="line"><span class="keyword">if</span>($i==<span class="number">25</span>)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $i. <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-11Break和continue区别"><a href="#7-11Break和continue区别" class="headerlink" title="7.11Break和continue区别"></a>7.11Break和continue区别</h3><p>Break是直接结束当前循环，continue是跳过当次循环。</p><p>这两个用法都有一个设置数字的方式，默认为1； 如：break 数字; continue 数字;</p><p>数字代表退出或者跳过<strong>几个循环</strong>。</p><p>如果循环不够会报致命错误。</p><h3 id="7-12Goto语句"><a href="#7-12Goto语句" class="headerlink" title="7.12Goto语句"></a>7.12Goto语句</h3><p><code>说明</code>：goto语句就是在页面中的不同位置进行跳转.</p><h3 id="7-13Return语句"><a href="#7-13Return语句" class="headerlink" title="7.13Return语句"></a>7.13Return语句</h3><p><code>说明</code>：return可以在函数内使用，也可以在页面中它位置使用。</p><p>如果是在函数内使用，作用为停止当前函数的运行，还可以返回函数内的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;hh&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">abc();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果是在页面中使用，作用为停止当前页面的运行；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Hello!&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;hh&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">abc();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-14文件引入（加载）"><a href="#7-14文件引入（加载）" class="headerlink" title="7.14文件引入（加载）"></a>7.14文件引入（加载）</h3><p><code>说明</code>：文件的加载可以是PHP文件可以是HTML文件</p><p>加载方式为：<code>include</code>、<code>require</code>、<code>include_once</code>、<code>require_once</code></p><p> 加载进来是两种结果：文件内容加载进来并运行、获取return的数据</p><p> 如果是加载内容：include ‘要加载进来文件的路径’;</p><p> 如果是数据：include(‘要获取数据的文件路径’);</p><p>案例：</p><p><code>加载内容</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//文件加载</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./test.html&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>获取数据</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$res = <span class="keyword">include</span>(<span class="string">&#x27;./test.html&#x27;</span>);</span><br><span class="line">var_dump($res);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Include</code>和<code>require</code>的区别：</p><p>区别是：<code>错误级别</code>不一样，造成了运行出错后的结果不一样。</p><p>Include如果出现错误，不影响程序的代码运行。</p><p>Require如果出现错误，会影响程序的代码运行，不再往下执行</p><h2 id="第八章-函数"><a href="#第八章-函数" class="headerlink" title="第八章 函数"></a>第八章 函数</h2><h3 id="8-1函数介绍"><a href="#8-1函数介绍" class="headerlink" title="8.1函数介绍"></a>8.1函数介绍</h3><p><code>说明</code>：函数的作用在于对一个功能的封装，封装后在别的页面中引入并调用，可以节省代码量，可以冗余。</p><h4 id="8-1-1函数的定义"><a href="#8-1-1函数的定义" class="headerlink" title="8.1.1函数的定义"></a>8.1.1函数的定义</h4><p><code>Function</code> 函数名(【形参1】【,参数2】【,形参n……】){</p><p>​        要封装到函数的代码;</p><p>​        【return 返回值】;</p><p>}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//1.函数的定义</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">$num1,$num2</span>)</span>&#123;</span><br><span class="line">$res = $num1+$num2;<span class="comment">//要封装函数的代码</span></span><br><span class="line"><span class="keyword">echo</span> $res;<span class="comment">//要封装函数的代码</span></span><br><span class="line"><span class="keyword">return</span> $res;<span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-1-2函数的调用"><a href="#8-1-2函数的调用" class="headerlink" title="8.1.2函数的调用"></a>8.1.2函数的调用</h4><p><code>说明</code>：直接使用需要调用的函数的名就可以了。</p><p>函数名(【实参1】【,实参2】【,实参n……】);</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.调用函数并传递参数</span></span><br><span class="line">getSum(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h4 id="8-1-3函数的相关细节"><a href="#8-1-3函数的相关细节" class="headerlink" title="8.1.3函数的相关细节"></a>8.1.3函数的相关细节</h4><p><code>1</code>.函数定义时的形参，不是一个具体的数值，而是需要接收“实参”的工具而已，形参必须是变量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">$num1,$num2</span>)</span></span><br></pre></td></tr></table></figure><p><code>2</code>.形参可以给默认值，且可以是多种类型的数据</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200918134616669.png" alt="image-20200918134616669"></p><p><code>3</code>.实参就是要给函数传递数据用的工具，可以是具体的值，可以是变量，实参必须和形参“一一对应”;</p><p><code>4</code>.函数名遵循变量的定义规则：字母、数字、下划线且不能以数字开头.</p><p><code>5</code>.函数名不能重复;</p><p><code>6</code>.Return返回值，如果写了就会返回当前要返回的值，如果没写其实默认返回一个1或者null；</p><p><code>7</code>return如何返回多个值;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getVal</span>(<span class="params">$num1,$num2</span>)</span>&#123;</span><br><span class="line">$res1 = $num1+$num2;</span><br><span class="line">$res2 = $num1-$num2;</span><br><span class="line"><span class="keyword">return</span> $arr = <span class="keyword">array</span>($res1,$res2);</span><br><span class="line">&#125;</span><br><span class="line">$res = getVal(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">var_dump($res);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>8</code>.返回值必须使用一个变量到函数的调用者这个位置进行接收。</p><h3 id="8-2函数的调用机制"><a href="#8-2函数的调用机制" class="headerlink" title="8.2函数的调用机制"></a>8.2函数的调用机制</h3><h4 id="8-2-1代码："><a href="#8-2-1代码：" class="headerlink" title="8.2.1代码："></a>8.2.1代码：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getVal</span>(<span class="params">$num1,$num2</span>)</span>&#123;</span><br><span class="line">$res = $num1+$num2;</span><br><span class="line"><span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line">$res = getVal(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"><span class="keyword">echo</span> $res;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-2-2说明："><a href="#8-2-2说明：" class="headerlink" title="8.2.2说明："></a>8.2.2说明：</h4><p><code>1</code>.函数的调用者把实际的数据传递给函数的形参，这个时候的形参只能在函数内使用。</p><p><code>2</code>.函数在运行代码时会新建一个新空间来运行函数内的代码</p><p><code>3</code>.运行代码后，如果有返回值，把结果返回给函数的调用者，这个时候运行函数的这个新的空间销毁</p><h4 id="8-2-3图解："><a href="#8-2-3图解：" class="headerlink" title="8.2.3图解："></a>8.2.3图解：</h4><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/sss.png" alt="sss"></p><h4 id="8-2-4其他说明：引用传递"><a href="#8-2-4其他说明：引用传递" class="headerlink" title="8.2.4其他说明：引用传递"></a>8.2.4其他说明：引用传递</h4><p><code>说明</code>：有的函数可以直接使用全局变量，这个时候是引用传递</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">6</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params">&amp;$a</span>)</span>&#123;</span><br><span class="line">$a=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line">&#125;</span><br><span class="line">abc($a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/aaa.png" alt="aaa"></p><h3 id="8-3函数的封装性"><a href="#8-3函数的封装性" class="headerlink" title="8.3函数的封装性"></a>8.3函数的封装性</h3><h4 id="8-3-2封装的好处"><a href="#8-3-2封装的好处" class="headerlink" title="8.3.2封装的好处"></a>8.3.2封装的好处</h4><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/dsfsfdsf.png" alt="dsfsfdsf"></p><h3 id="8-4可变函数"><a href="#8-4可变函数" class="headerlink" title="8.4可变函数"></a>8.4可变函数</h3><p><code>说明</code>：就是一个变量如果加上括号，PHP的系统会解析成函数，这个变量的值必须是一个函数的名，否则报错，未定义了。</p><p><code>案例</code>：</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200918140429309.png" alt="image-20200918140429309"></p><h3 id="8-5回调函数"><a href="#8-5回调函数" class="headerlink" title="8.5回调函数"></a>8.5回调函数</h3><p><code>说明</code>：在一个函数中调用另一个函数，这个时候称为“回调”;</p><p><code>案例</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//回调函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">$a,$b</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> sum($a,$b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">$num1,$num2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $num1+$num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$res = getSum(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">echo</span> $res;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-6匿名函数"><a href="#8-6匿名函数" class="headerlink" title="8.6匿名函数"></a>8.6匿名函数</h3><p><code>说明</code>：匿名函数就是没有名称的函数，这个时候需要用一个变量来存储函数。</p><p><code>案例</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//普通方式</span></span><br><span class="line">$sum = <span class="function"><span class="keyword">function</span>(<span class="params">$num1,$num2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $num1+$num2;</span><br><span class="line">&#125;;</span><br><span class="line">$res = $sum(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">echo</span> $res.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回调方式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSub</span>(<span class="params">$n1,$n2,$c</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $c($n1,$n2);</span><br><span class="line">&#125;</span><br><span class="line">$res = getSub(<span class="number">3</span>,<span class="number">2</span>,<span class="function"><span class="keyword">function</span>(<span class="params">$n1,$n2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $n1-$n2;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">echo</span> $res;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-7内部函数"><a href="#8-7内部函数" class="headerlink" title="8.7内部函数"></a>8.7内部函数</h3><p><code>说明</code>：在一个函数内部再定义函数，这个时候里面的函数只能在函数内使用，不能在外部使用，防止外部人调用函数，这种函数方式不多，面向对象中都是这种方式。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//内部函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getVal</span>(<span class="params">$n1,$n2</span>)</span>&#123;</span><br><span class="line"><span class="comment">//需要制作一个 加法和 减法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">$n1,$n2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $n1+$n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params">$n1,$n2</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $n1-$n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> sum($n1,$n2);</span><br><span class="line"><span class="keyword">echo</span> sub($n1,$n2);</span><br><span class="line">&#125;</span><br><span class="line">getVal(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">sum(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-8递归思想"><a href="#8-8递归思想" class="headerlink" title="8.8递归思想"></a>8.8递归思想</h3><p><code>说明</code>：在一个函数内部再次有条件调用自己（当前函数），这个时候就称为“递归调用”，即自己调用自己。</p><p><code>代码</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abc</span>(<span class="params">$a</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>($a &gt; <span class="number">2</span>)&#123;</span><br><span class="line">abc(--$a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">//2 2 3</span></span><br><span class="line">&#125;</span><br><span class="line">abc(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>图解</code>：</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/aaa-1600410816765.png" alt="aaa"></p><p><code>注意</code>：</p><p><code>1</code>.递归调用必须有一个可以退出的条件，否则无法退出递归调用，就会成死归,也就是说必须逐渐的退出。</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/aaaaa.png" alt="aaaaa"></p><h3 id="8-9网站布局的方式"><a href="#8-9网站布局的方式" class="headerlink" title="8.9网站布局的方式"></a>8.9网站布局的方式</h3><h2 id="第九章-数组"><a href="#第九章-数组" class="headerlink" title="第九章 数组"></a>第九章 数组</h2><h3 id="9-1数组的介绍"><a href="#9-1数组的介绍" class="headerlink" title="9.1数组的介绍"></a>9.1数组的介绍</h3><p><code>说明</code>：一组（一堆）数据的集合，把多个数据进行组合，数组是由“元素”组成。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//方式一：</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;three&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>1.方式二：</p><p>​            <code>变量</code> = array(元素,元素,元素,……….);</p><p>​            </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr3 = <span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="number">0</span>,<span class="number">1</span>=&gt;<span class="number">1</span>,<span class="number">2</span>=&gt;<span class="number">2</span>,<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-2数组的创建"><a href="#9-2数组的创建" class="headerlink" title="9.2数组的创建"></a>9.2数组的创建</h3><h4 id="数组的分类"><a href="#数组的分类" class="headerlink" title="数组的分类"></a>数组的分类</h4><p><code>索引数组</code>：下标都是数字，且连续的递增的方式。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="number">3</span>,<span class="number">4</span>,<span class="number">56</span>,<span class="number">76</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line">var_dump($arr1);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>关联数组</code>：下标都是字符串的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">1</span>,<span class="string">&#x27;sex&#x27;</span>=<span class="string">&#x27;body&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="9-3数组的使用"><a href="#9-3数组的使用" class="headerlink" title="9.3数组的使用"></a>9.3数组的使用</h3><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>​    获取到一个元素中的值；</p><p>​    写数组名(变量名)[下标];  //必须知道下标是什么，只能打印输出一个值</p><h4 id="数组的遍历–遍历就是一个一个的自动获取"><a href="#数组的遍历–遍历就是一个一个的自动获取" class="headerlink" title="数组的遍历–遍历就是一个一个的自动获取"></a>数组的遍历–遍历就是一个一个的自动获取</h4><p>For循环遍历数组–只能遍历索引数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">$arrlength = count($arr1);</span><br><span class="line">$maxoffset = $arrlength<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=$maxoffset;$i++)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;下标为：&#x27;</span> . $i . <span class="string">&#x27;=&gt;&#x27;</span>. $arr1[$i].<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Foreach</code>循环变量数组–都可以遍历</p><p><code>Foreach</code>(要遍历的数组 as $key=&gt;$value){</p><p>​        $key就是每次循环获取数组中一个元素的下标</p><p>​        $value就是每次循环获取数组中的个元素的值</p><p>}</p><p>循环每次都是一个，获取完这个后数组的内部指针下移，一直到没有数组了给false</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">12</span>,<span class="string">&#x27;sex&#x27;</span>=&gt;<span class="string">&#x27;boy&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($arr1 <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line"><span class="keyword">echo</span> $key . <span class="string">&#x27;=&gt;&#x27;</span> . $value . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-4几个数组函数"><a href="#9-4几个数组函数" class="headerlink" title="9.4几个数组函数"></a>9.4几个数组函数</h3><p><code>list</code>()函数：</p><p>把数组中的值取出来给list中的变量，也就是说list中放变量，这个变量就可以获取数组的值；</p><p><img src="https://gitee.com/ey0rt/hexo_img/raw/master/image/image-20200918161243080.png" alt="image-20200918161243080"></p><p>Count()：获取数组的长度</p><p>Is_array()：检查某个变量是否是数组</p><p>var_dump()：打印输出数组中类型和长度和值</p><p>print_r()：打印输出数组中键值对</p><p>implode()：通过一个分隔符链接数组成为字符串</p><p>explode()：通过个分割符把一个字符串分割成数组</p><h3 id="9-5二维数组及多维"><a href="#9-5二维数组及多维" class="headerlink" title="9.5二维数组及多维"></a>9.5二维数组及多维</h3><p>在弱类型语言中是没有具体的一个创建多维数组的函数或变量等，通过一维数组的创建方式来组合成二维或多维数组。</p><p>创建方式：一个数组的元素又是另一个数组，这个时候称为”二维数组“，如果一直往下的元素还是数组，这个时候称为”多维数组“.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//创建二维数组</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">16</span>,<span class="string">&#x27;sex&#x27;</span>=<span class="string">&#x27;boy&#x27;</span>);</span><br><span class="line"><span class="number">1</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">11</span>,<span class="string">&#x27;sex&#x27;</span>=&gt;<span class="string">&#x27;girl&#x27;</span>);</span><br><span class="line">)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一章-PHP基础语法&quot;&gt;&lt;a href=&quot;#第一章-PHP基础语法&quot; class=&quot;headerlink&quot; title=&quot;第一章 PHP基础语法&quot;&gt;&lt;/a&gt;第一章 PHP基础语法&lt;/h2&gt;&lt;h3 id=&quot;1-1PHP标示符&quot;&gt;&lt;a href=&quot;#1-1PHP标示</summary>
      
    
    
    
    <category term="编程语言" scheme="https://ey404.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="PHP" scheme="https://ey404.github.io/tags/PHP/"/>
    
  </entry>
  
</feed>
